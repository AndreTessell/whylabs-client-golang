/*
WhyLabs Songbird

WhyLabs API that enables end-to-end AI observability

API version: 0.1
Contact: support@whylabs.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DTOSparkPythonTaskDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DTOSparkPythonTaskDTO{}

// DTOSparkPythonTaskDTO struct for DTOSparkPythonTaskDTO
type DTOSparkPythonTaskDTO struct {
	PythonFile *string `json:"pythonFile,omitempty"`
	Parameters []map[string]interface{} `json:"parameters,omitempty"`
}

// NewDTOSparkPythonTaskDTO instantiates a new DTOSparkPythonTaskDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDTOSparkPythonTaskDTO() *DTOSparkPythonTaskDTO {
	this := DTOSparkPythonTaskDTO{}
	return &this
}

// NewDTOSparkPythonTaskDTOWithDefaults instantiates a new DTOSparkPythonTaskDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDTOSparkPythonTaskDTOWithDefaults() *DTOSparkPythonTaskDTO {
	this := DTOSparkPythonTaskDTO{}
	return &this
}

// GetPythonFile returns the PythonFile field value if set, zero value otherwise.
func (o *DTOSparkPythonTaskDTO) GetPythonFile() string {
	if o == nil || isNil(o.PythonFile) {
		var ret string
		return ret
	}
	return *o.PythonFile
}

// GetPythonFileOk returns a tuple with the PythonFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DTOSparkPythonTaskDTO) GetPythonFileOk() (*string, bool) {
	if o == nil || isNil(o.PythonFile) {
		return nil, false
	}
	return o.PythonFile, true
}

// HasPythonFile returns a boolean if a field has been set.
func (o *DTOSparkPythonTaskDTO) HasPythonFile() bool {
	if o != nil && !isNil(o.PythonFile) {
		return true
	}

	return false
}

// SetPythonFile gets a reference to the given string and assigns it to the PythonFile field.
func (o *DTOSparkPythonTaskDTO) SetPythonFile(v string) {
	o.PythonFile = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *DTOSparkPythonTaskDTO) GetParameters() []map[string]interface{} {
	if o == nil || isNil(o.Parameters) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DTOSparkPythonTaskDTO) GetParametersOk() ([]map[string]interface{}, bool) {
	if o == nil || isNil(o.Parameters) {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *DTOSparkPythonTaskDTO) HasParameters() bool {
	if o != nil && !isNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given []map[string]interface{} and assigns it to the Parameters field.
func (o *DTOSparkPythonTaskDTO) SetParameters(v []map[string]interface{}) {
	o.Parameters = v
}

func (o DTOSparkPythonTaskDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DTOSparkPythonTaskDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.PythonFile) {
		toSerialize["pythonFile"] = o.PythonFile
	}
	if !isNil(o.Parameters) {
		toSerialize["parameters"] = o.Parameters
	}
	return toSerialize, nil
}

type NullableDTOSparkPythonTaskDTO struct {
	value *DTOSparkPythonTaskDTO
	isSet bool
}

func (v NullableDTOSparkPythonTaskDTO) Get() *DTOSparkPythonTaskDTO {
	return v.value
}

func (v *NullableDTOSparkPythonTaskDTO) Set(val *DTOSparkPythonTaskDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableDTOSparkPythonTaskDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableDTOSparkPythonTaskDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDTOSparkPythonTaskDTO(val *DTOSparkPythonTaskDTO) *NullableDTOSparkPythonTaskDTO {
	return &NullableDTOSparkPythonTaskDTO{value: val, isSet: true}
}

func (v NullableDTOSparkPythonTaskDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDTOSparkPythonTaskDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


