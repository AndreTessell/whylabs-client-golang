/*
WhyLabs Songbird

WhyLabs API that enables end-to-end AI observability

API version: 0.1
Contact: support@whylabs.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DTONotebookTaskDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DTONotebookTaskDTO{}

// DTONotebookTaskDTO struct for DTONotebookTaskDTO
type DTONotebookTaskDTO struct {
	NotebookPath *string `json:"notebookPath,omitempty"`
	BaseParameters *map[string]string `json:"baseParameters,omitempty"`
	RevisionTimestamp *int64 `json:"revisionTimestamp,omitempty"`
}

// NewDTONotebookTaskDTO instantiates a new DTONotebookTaskDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDTONotebookTaskDTO() *DTONotebookTaskDTO {
	this := DTONotebookTaskDTO{}
	return &this
}

// NewDTONotebookTaskDTOWithDefaults instantiates a new DTONotebookTaskDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDTONotebookTaskDTOWithDefaults() *DTONotebookTaskDTO {
	this := DTONotebookTaskDTO{}
	return &this
}

// GetNotebookPath returns the NotebookPath field value if set, zero value otherwise.
func (o *DTONotebookTaskDTO) GetNotebookPath() string {
	if o == nil || isNil(o.NotebookPath) {
		var ret string
		return ret
	}
	return *o.NotebookPath
}

// GetNotebookPathOk returns a tuple with the NotebookPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DTONotebookTaskDTO) GetNotebookPathOk() (*string, bool) {
	if o == nil || isNil(o.NotebookPath) {
		return nil, false
	}
	return o.NotebookPath, true
}

// HasNotebookPath returns a boolean if a field has been set.
func (o *DTONotebookTaskDTO) HasNotebookPath() bool {
	if o != nil && !isNil(o.NotebookPath) {
		return true
	}

	return false
}

// SetNotebookPath gets a reference to the given string and assigns it to the NotebookPath field.
func (o *DTONotebookTaskDTO) SetNotebookPath(v string) {
	o.NotebookPath = &v
}

// GetBaseParameters returns the BaseParameters field value if set, zero value otherwise.
func (o *DTONotebookTaskDTO) GetBaseParameters() map[string]string {
	if o == nil || isNil(o.BaseParameters) {
		var ret map[string]string
		return ret
	}
	return *o.BaseParameters
}

// GetBaseParametersOk returns a tuple with the BaseParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DTONotebookTaskDTO) GetBaseParametersOk() (*map[string]string, bool) {
	if o == nil || isNil(o.BaseParameters) {
		return nil, false
	}
	return o.BaseParameters, true
}

// HasBaseParameters returns a boolean if a field has been set.
func (o *DTONotebookTaskDTO) HasBaseParameters() bool {
	if o != nil && !isNil(o.BaseParameters) {
		return true
	}

	return false
}

// SetBaseParameters gets a reference to the given map[string]string and assigns it to the BaseParameters field.
func (o *DTONotebookTaskDTO) SetBaseParameters(v map[string]string) {
	o.BaseParameters = &v
}

// GetRevisionTimestamp returns the RevisionTimestamp field value if set, zero value otherwise.
func (o *DTONotebookTaskDTO) GetRevisionTimestamp() int64 {
	if o == nil || isNil(o.RevisionTimestamp) {
		var ret int64
		return ret
	}
	return *o.RevisionTimestamp
}

// GetRevisionTimestampOk returns a tuple with the RevisionTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DTONotebookTaskDTO) GetRevisionTimestampOk() (*int64, bool) {
	if o == nil || isNil(o.RevisionTimestamp) {
		return nil, false
	}
	return o.RevisionTimestamp, true
}

// HasRevisionTimestamp returns a boolean if a field has been set.
func (o *DTONotebookTaskDTO) HasRevisionTimestamp() bool {
	if o != nil && !isNil(o.RevisionTimestamp) {
		return true
	}

	return false
}

// SetRevisionTimestamp gets a reference to the given int64 and assigns it to the RevisionTimestamp field.
func (o *DTONotebookTaskDTO) SetRevisionTimestamp(v int64) {
	o.RevisionTimestamp = &v
}

func (o DTONotebookTaskDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DTONotebookTaskDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.NotebookPath) {
		toSerialize["notebookPath"] = o.NotebookPath
	}
	if !isNil(o.BaseParameters) {
		toSerialize["baseParameters"] = o.BaseParameters
	}
	if !isNil(o.RevisionTimestamp) {
		toSerialize["revisionTimestamp"] = o.RevisionTimestamp
	}
	return toSerialize, nil
}

type NullableDTONotebookTaskDTO struct {
	value *DTONotebookTaskDTO
	isSet bool
}

func (v NullableDTONotebookTaskDTO) Get() *DTONotebookTaskDTO {
	return v.value
}

func (v *NullableDTONotebookTaskDTO) Set(val *DTONotebookTaskDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableDTONotebookTaskDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableDTONotebookTaskDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDTONotebookTaskDTO(val *DTONotebookTaskDTO) *NullableDTONotebookTaskDTO {
	return &NullableDTONotebookTaskDTO{value: val, isSet: true}
}

func (v NullableDTONotebookTaskDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDTONotebookTaskDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


