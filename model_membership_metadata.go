/*
WhyLabs Songbird

WhyLabs API that enables end-to-end AI observability

API version: 0.1
Contact: support@whylabs.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MembershipMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MembershipMetadata{}

// MembershipMetadata struct for MembershipMetadata
type MembershipMetadata struct {
	OrgId *string `json:"orgId,omitempty"`
	Role *Role `json:"role,omitempty"`
	UserId *string `json:"userId,omitempty"`
	Default *bool `json:"default,omitempty"`
}

// NewMembershipMetadata instantiates a new MembershipMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMembershipMetadata() *MembershipMetadata {
	this := MembershipMetadata{}
	return &this
}

// NewMembershipMetadataWithDefaults instantiates a new MembershipMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMembershipMetadataWithDefaults() *MembershipMetadata {
	this := MembershipMetadata{}
	return &this
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *MembershipMetadata) GetOrgId() string {
	if o == nil || isNil(o.OrgId) {
		var ret string
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipMetadata) GetOrgIdOk() (*string, bool) {
	if o == nil || isNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *MembershipMetadata) HasOrgId() bool {
	if o != nil && !isNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given string and assigns it to the OrgId field.
func (o *MembershipMetadata) SetOrgId(v string) {
	o.OrgId = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *MembershipMetadata) GetRole() Role {
	if o == nil || isNil(o.Role) {
		var ret Role
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipMetadata) GetRoleOk() (*Role, bool) {
	if o == nil || isNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *MembershipMetadata) HasRole() bool {
	if o != nil && !isNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given Role and assigns it to the Role field.
func (o *MembershipMetadata) SetRole(v Role) {
	o.Role = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *MembershipMetadata) GetUserId() string {
	if o == nil || isNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipMetadata) GetUserIdOk() (*string, bool) {
	if o == nil || isNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *MembershipMetadata) HasUserId() bool {
	if o != nil && !isNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *MembershipMetadata) SetUserId(v string) {
	o.UserId = &v
}

// GetDefault returns the Default field value if set, zero value otherwise.
func (o *MembershipMetadata) GetDefault() bool {
	if o == nil || isNil(o.Default) {
		var ret bool
		return ret
	}
	return *o.Default
}

// GetDefaultOk returns a tuple with the Default field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipMetadata) GetDefaultOk() (*bool, bool) {
	if o == nil || isNil(o.Default) {
		return nil, false
	}
	return o.Default, true
}

// HasDefault returns a boolean if a field has been set.
func (o *MembershipMetadata) HasDefault() bool {
	if o != nil && !isNil(o.Default) {
		return true
	}

	return false
}

// SetDefault gets a reference to the given bool and assigns it to the Default field.
func (o *MembershipMetadata) SetDefault(v bool) {
	o.Default = &v
}

func (o MembershipMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MembershipMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.OrgId) {
		toSerialize["orgId"] = o.OrgId
	}
	if !isNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !isNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if !isNil(o.Default) {
		toSerialize["default"] = o.Default
	}
	return toSerialize, nil
}

type NullableMembershipMetadata struct {
	value *MembershipMetadata
	isSet bool
}

func (v NullableMembershipMetadata) Get() *MembershipMetadata {
	return v.value
}

func (v *NullableMembershipMetadata) Set(val *MembershipMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableMembershipMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableMembershipMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMembershipMetadata(val *MembershipMetadata) *NullableMembershipMetadata {
	return &NullableMembershipMetadata{value: val, isSet: true}
}

func (v NullableMembershipMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMembershipMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


