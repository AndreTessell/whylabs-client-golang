/*
WhyLabs Songbird

WhyLabs API that enables end-to-end AI observability

API version: 0.1
Contact: support@whylabs.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetMarketplaceMetadataResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetMarketplaceMetadataResponse{}

// GetMarketplaceMetadataResponse Response for listing organization
type GetMarketplaceMetadataResponse struct {
	Metadata AWSMarketplaceMetadata `json:"metadata"`
}

// NewGetMarketplaceMetadataResponse instantiates a new GetMarketplaceMetadataResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetMarketplaceMetadataResponse(metadata AWSMarketplaceMetadata) *GetMarketplaceMetadataResponse {
	this := GetMarketplaceMetadataResponse{}
	this.Metadata = metadata
	return &this
}

// NewGetMarketplaceMetadataResponseWithDefaults instantiates a new GetMarketplaceMetadataResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetMarketplaceMetadataResponseWithDefaults() *GetMarketplaceMetadataResponse {
	this := GetMarketplaceMetadataResponse{}
	return &this
}

// GetMetadata returns the Metadata field value
func (o *GetMarketplaceMetadataResponse) GetMetadata() AWSMarketplaceMetadata {
	if o == nil {
		var ret AWSMarketplaceMetadata
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
func (o *GetMarketplaceMetadataResponse) GetMetadataOk() (*AWSMarketplaceMetadata, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metadata, true
}

// SetMetadata sets field value
func (o *GetMarketplaceMetadataResponse) SetMetadata(v AWSMarketplaceMetadata) {
	o.Metadata = v
}

func (o GetMarketplaceMetadataResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetMarketplaceMetadataResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["metadata"] = o.Metadata
	return toSerialize, nil
}

type NullableGetMarketplaceMetadataResponse struct {
	value *GetMarketplaceMetadataResponse
	isSet bool
}

func (v NullableGetMarketplaceMetadataResponse) Get() *GetMarketplaceMetadataResponse {
	return v.value
}

func (v *NullableGetMarketplaceMetadataResponse) Set(val *GetMarketplaceMetadataResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetMarketplaceMetadataResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetMarketplaceMetadataResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetMarketplaceMetadataResponse(val *GetMarketplaceMetadataResponse) *NullableGetMarketplaceMetadataResponse {
	return &NullableGetMarketplaceMetadataResponse{value: val, isSet: true}
}

func (v NullableGetMarketplaceMetadataResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetMarketplaceMetadataResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


