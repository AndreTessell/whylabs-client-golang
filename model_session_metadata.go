/*
WhyLabs Songbird

WhyLabs API that enables end-to-end AI observability

API version: 0.1
Contact: support@whylabs.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SessionMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SessionMetadata{}

// SessionMetadata Response for getting sessions.
type SessionMetadata struct {
	// The id of the session
	SessionId *string `json:"sessionId,omitempty"`
	// The org id of the session
	OrgId *string `json:"orgId,omitempty"`
	// The model id of the session. There should only be a single model.
	ModelId *string `json:"modelId,omitempty"`
	// Whether or not the session is open for uploading dataset profiles to.
	Closed *bool `json:"closed,omitempty"`
	// The generated user id for the session.
	UserId *string `json:"userId,omitempty"`
}

// NewSessionMetadata instantiates a new SessionMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSessionMetadata() *SessionMetadata {
	this := SessionMetadata{}
	return &this
}

// NewSessionMetadataWithDefaults instantiates a new SessionMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSessionMetadataWithDefaults() *SessionMetadata {
	this := SessionMetadata{}
	return &this
}

// GetSessionId returns the SessionId field value if set, zero value otherwise.
func (o *SessionMetadata) GetSessionId() string {
	if o == nil || isNil(o.SessionId) {
		var ret string
		return ret
	}
	return *o.SessionId
}

// GetSessionIdOk returns a tuple with the SessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionMetadata) GetSessionIdOk() (*string, bool) {
	if o == nil || isNil(o.SessionId) {
		return nil, false
	}
	return o.SessionId, true
}

// HasSessionId returns a boolean if a field has been set.
func (o *SessionMetadata) HasSessionId() bool {
	if o != nil && !isNil(o.SessionId) {
		return true
	}

	return false
}

// SetSessionId gets a reference to the given string and assigns it to the SessionId field.
func (o *SessionMetadata) SetSessionId(v string) {
	o.SessionId = &v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *SessionMetadata) GetOrgId() string {
	if o == nil || isNil(o.OrgId) {
		var ret string
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionMetadata) GetOrgIdOk() (*string, bool) {
	if o == nil || isNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *SessionMetadata) HasOrgId() bool {
	if o != nil && !isNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given string and assigns it to the OrgId field.
func (o *SessionMetadata) SetOrgId(v string) {
	o.OrgId = &v
}

// GetModelId returns the ModelId field value if set, zero value otherwise.
func (o *SessionMetadata) GetModelId() string {
	if o == nil || isNil(o.ModelId) {
		var ret string
		return ret
	}
	return *o.ModelId
}

// GetModelIdOk returns a tuple with the ModelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionMetadata) GetModelIdOk() (*string, bool) {
	if o == nil || isNil(o.ModelId) {
		return nil, false
	}
	return o.ModelId, true
}

// HasModelId returns a boolean if a field has been set.
func (o *SessionMetadata) HasModelId() bool {
	if o != nil && !isNil(o.ModelId) {
		return true
	}

	return false
}

// SetModelId gets a reference to the given string and assigns it to the ModelId field.
func (o *SessionMetadata) SetModelId(v string) {
	o.ModelId = &v
}

// GetClosed returns the Closed field value if set, zero value otherwise.
func (o *SessionMetadata) GetClosed() bool {
	if o == nil || isNil(o.Closed) {
		var ret bool
		return ret
	}
	return *o.Closed
}

// GetClosedOk returns a tuple with the Closed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionMetadata) GetClosedOk() (*bool, bool) {
	if o == nil || isNil(o.Closed) {
		return nil, false
	}
	return o.Closed, true
}

// HasClosed returns a boolean if a field has been set.
func (o *SessionMetadata) HasClosed() bool {
	if o != nil && !isNil(o.Closed) {
		return true
	}

	return false
}

// SetClosed gets a reference to the given bool and assigns it to the Closed field.
func (o *SessionMetadata) SetClosed(v bool) {
	o.Closed = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *SessionMetadata) GetUserId() string {
	if o == nil || isNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionMetadata) GetUserIdOk() (*string, bool) {
	if o == nil || isNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *SessionMetadata) HasUserId() bool {
	if o != nil && !isNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *SessionMetadata) SetUserId(v string) {
	o.UserId = &v
}

func (o SessionMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SessionMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.SessionId) {
		toSerialize["sessionId"] = o.SessionId
	}
	if !isNil(o.OrgId) {
		toSerialize["orgId"] = o.OrgId
	}
	if !isNil(o.ModelId) {
		toSerialize["modelId"] = o.ModelId
	}
	if !isNil(o.Closed) {
		toSerialize["closed"] = o.Closed
	}
	if !isNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	return toSerialize, nil
}

type NullableSessionMetadata struct {
	value *SessionMetadata
	isSet bool
}

func (v NullableSessionMetadata) Get() *SessionMetadata {
	return v.value
}

func (v *NullableSessionMetadata) Set(val *SessionMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableSessionMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableSessionMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSessionMetadata(val *SessionMetadata) *NullableSessionMetadata {
	return &NullableSessionMetadata{value: val, isSet: true}
}

func (v NullableSessionMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSessionMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


