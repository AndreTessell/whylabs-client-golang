/*
WhyLabs Songbird

WhyLabs API that enables end-to-end AI observability

API version: 0.1
Contact: support@whylabs.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DTODbfsStorageInfoDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DTODbfsStorageInfoDTO{}

// DTODbfsStorageInfoDTO struct for DTODbfsStorageInfoDTO
type DTODbfsStorageInfoDTO struct {
	Destination *string `json:"destination,omitempty"`
}

// NewDTODbfsStorageInfoDTO instantiates a new DTODbfsStorageInfoDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDTODbfsStorageInfoDTO() *DTODbfsStorageInfoDTO {
	this := DTODbfsStorageInfoDTO{}
	return &this
}

// NewDTODbfsStorageInfoDTOWithDefaults instantiates a new DTODbfsStorageInfoDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDTODbfsStorageInfoDTOWithDefaults() *DTODbfsStorageInfoDTO {
	this := DTODbfsStorageInfoDTO{}
	return &this
}

// GetDestination returns the Destination field value if set, zero value otherwise.
func (o *DTODbfsStorageInfoDTO) GetDestination() string {
	if o == nil || isNil(o.Destination) {
		var ret string
		return ret
	}
	return *o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DTODbfsStorageInfoDTO) GetDestinationOk() (*string, bool) {
	if o == nil || isNil(o.Destination) {
		return nil, false
	}
	return o.Destination, true
}

// HasDestination returns a boolean if a field has been set.
func (o *DTODbfsStorageInfoDTO) HasDestination() bool {
	if o != nil && !isNil(o.Destination) {
		return true
	}

	return false
}

// SetDestination gets a reference to the given string and assigns it to the Destination field.
func (o *DTODbfsStorageInfoDTO) SetDestination(v string) {
	o.Destination = &v
}

func (o DTODbfsStorageInfoDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DTODbfsStorageInfoDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Destination) {
		toSerialize["destination"] = o.Destination
	}
	return toSerialize, nil
}

type NullableDTODbfsStorageInfoDTO struct {
	value *DTODbfsStorageInfoDTO
	isSet bool
}

func (v NullableDTODbfsStorageInfoDTO) Get() *DTODbfsStorageInfoDTO {
	return v.value
}

func (v *NullableDTODbfsStorageInfoDTO) Set(val *DTODbfsStorageInfoDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableDTODbfsStorageInfoDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableDTODbfsStorageInfoDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDTODbfsStorageInfoDTO(val *DTODbfsStorageInfoDTO) *NullableDTODbfsStorageInfoDTO {
	return &NullableDTODbfsStorageInfoDTO{value: val, isSet: true}
}

func (v NullableDTODbfsStorageInfoDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDTODbfsStorageInfoDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


