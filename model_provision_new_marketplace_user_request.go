/*
WhyLabs Songbird

WhyLabs API that enables end-to-end AI observability

API version: 0.1
Contact: support@whylabs.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ProvisionNewMarketplaceUserRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProvisionNewMarketplaceUserRequest{}

// ProvisionNewMarketplaceUserRequest struct for ProvisionNewMarketplaceUserRequest
type ProvisionNewMarketplaceUserRequest struct {
	Email string `json:"email"`
	OrgName string `json:"orgName"`
	ModelName string `json:"modelName"`
	CustomerIdToken string `json:"customerIdToken"`
	ExpectExisting NullableBool `json:"expectExisting,omitempty"`
}

// NewProvisionNewMarketplaceUserRequest instantiates a new ProvisionNewMarketplaceUserRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProvisionNewMarketplaceUserRequest(email string, orgName string, modelName string, customerIdToken string) *ProvisionNewMarketplaceUserRequest {
	this := ProvisionNewMarketplaceUserRequest{}
	this.Email = email
	this.OrgName = orgName
	this.ModelName = modelName
	this.CustomerIdToken = customerIdToken
	return &this
}

// NewProvisionNewMarketplaceUserRequestWithDefaults instantiates a new ProvisionNewMarketplaceUserRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProvisionNewMarketplaceUserRequestWithDefaults() *ProvisionNewMarketplaceUserRequest {
	this := ProvisionNewMarketplaceUserRequest{}
	return &this
}

// GetEmail returns the Email field value
func (o *ProvisionNewMarketplaceUserRequest) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *ProvisionNewMarketplaceUserRequest) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *ProvisionNewMarketplaceUserRequest) SetEmail(v string) {
	o.Email = v
}

// GetOrgName returns the OrgName field value
func (o *ProvisionNewMarketplaceUserRequest) GetOrgName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrgName
}

// GetOrgNameOk returns a tuple with the OrgName field value
// and a boolean to check if the value has been set.
func (o *ProvisionNewMarketplaceUserRequest) GetOrgNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrgName, true
}

// SetOrgName sets field value
func (o *ProvisionNewMarketplaceUserRequest) SetOrgName(v string) {
	o.OrgName = v
}

// GetModelName returns the ModelName field value
func (o *ProvisionNewMarketplaceUserRequest) GetModelName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModelName
}

// GetModelNameOk returns a tuple with the ModelName field value
// and a boolean to check if the value has been set.
func (o *ProvisionNewMarketplaceUserRequest) GetModelNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModelName, true
}

// SetModelName sets field value
func (o *ProvisionNewMarketplaceUserRequest) SetModelName(v string) {
	o.ModelName = v
}

// GetCustomerIdToken returns the CustomerIdToken field value
func (o *ProvisionNewMarketplaceUserRequest) GetCustomerIdToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomerIdToken
}

// GetCustomerIdTokenOk returns a tuple with the CustomerIdToken field value
// and a boolean to check if the value has been set.
func (o *ProvisionNewMarketplaceUserRequest) GetCustomerIdTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomerIdToken, true
}

// SetCustomerIdToken sets field value
func (o *ProvisionNewMarketplaceUserRequest) SetCustomerIdToken(v string) {
	o.CustomerIdToken = v
}

// GetExpectExisting returns the ExpectExisting field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProvisionNewMarketplaceUserRequest) GetExpectExisting() bool {
	if o == nil || isNil(o.ExpectExisting.Get()) {
		var ret bool
		return ret
	}
	return *o.ExpectExisting.Get()
}

// GetExpectExistingOk returns a tuple with the ExpectExisting field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisionNewMarketplaceUserRequest) GetExpectExistingOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpectExisting.Get(), o.ExpectExisting.IsSet()
}

// HasExpectExisting returns a boolean if a field has been set.
func (o *ProvisionNewMarketplaceUserRequest) HasExpectExisting() bool {
	if o != nil && o.ExpectExisting.IsSet() {
		return true
	}

	return false
}

// SetExpectExisting gets a reference to the given NullableBool and assigns it to the ExpectExisting field.
func (o *ProvisionNewMarketplaceUserRequest) SetExpectExisting(v bool) {
	o.ExpectExisting.Set(&v)
}
// SetExpectExistingNil sets the value for ExpectExisting to be an explicit nil
func (o *ProvisionNewMarketplaceUserRequest) SetExpectExistingNil() {
	o.ExpectExisting.Set(nil)
}

// UnsetExpectExisting ensures that no value is present for ExpectExisting, not even an explicit nil
func (o *ProvisionNewMarketplaceUserRequest) UnsetExpectExisting() {
	o.ExpectExisting.Unset()
}

func (o ProvisionNewMarketplaceUserRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProvisionNewMarketplaceUserRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["email"] = o.Email
	toSerialize["orgName"] = o.OrgName
	toSerialize["modelName"] = o.ModelName
	toSerialize["customerIdToken"] = o.CustomerIdToken
	if o.ExpectExisting.IsSet() {
		toSerialize["expectExisting"] = o.ExpectExisting.Get()
	}
	return toSerialize, nil
}

type NullableProvisionNewMarketplaceUserRequest struct {
	value *ProvisionNewMarketplaceUserRequest
	isSet bool
}

func (v NullableProvisionNewMarketplaceUserRequest) Get() *ProvisionNewMarketplaceUserRequest {
	return v.value
}

func (v *NullableProvisionNewMarketplaceUserRequest) Set(val *ProvisionNewMarketplaceUserRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableProvisionNewMarketplaceUserRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableProvisionNewMarketplaceUserRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProvisionNewMarketplaceUserRequest(val *ProvisionNewMarketplaceUserRequest) *NullableProvisionNewMarketplaceUserRequest {
	return &NullableProvisionNewMarketplaceUserRequest{value: val, isSet: true}
}

func (v NullableProvisionNewMarketplaceUserRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProvisionNewMarketplaceUserRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


