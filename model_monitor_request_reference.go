/*
WhyLabs Songbird

WhyLabs API that enables end-to-end AI observability

API version: 0.1
Contact: support@whylabs.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MonitorRequestReference type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MonitorRequestReference{}

// MonitorRequestReference struct for MonitorRequestReference
type MonitorRequestReference struct {
	Type *MonitorRequestReferenceType `json:"type,omitempty"`
	ProfileTimestamp NullableInt64 `json:"profileTimestamp,omitempty"`
	ProfileId NullableString `json:"profileId,omitempty"`
	NumBatches NullableInt32 `json:"numBatches,omitempty"`
}

// NewMonitorRequestReference instantiates a new MonitorRequestReference object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitorRequestReference() *MonitorRequestReference {
	this := MonitorRequestReference{}
	return &this
}

// NewMonitorRequestReferenceWithDefaults instantiates a new MonitorRequestReference object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitorRequestReferenceWithDefaults() *MonitorRequestReference {
	this := MonitorRequestReference{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *MonitorRequestReference) GetType() MonitorRequestReferenceType {
	if o == nil || isNil(o.Type) {
		var ret MonitorRequestReferenceType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorRequestReference) GetTypeOk() (*MonitorRequestReferenceType, bool) {
	if o == nil || isNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *MonitorRequestReference) HasType() bool {
	if o != nil && !isNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given MonitorRequestReferenceType and assigns it to the Type field.
func (o *MonitorRequestReference) SetType(v MonitorRequestReferenceType) {
	o.Type = &v
}

// GetProfileTimestamp returns the ProfileTimestamp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MonitorRequestReference) GetProfileTimestamp() int64 {
	if o == nil || isNil(o.ProfileTimestamp.Get()) {
		var ret int64
		return ret
	}
	return *o.ProfileTimestamp.Get()
}

// GetProfileTimestampOk returns a tuple with the ProfileTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MonitorRequestReference) GetProfileTimestampOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProfileTimestamp.Get(), o.ProfileTimestamp.IsSet()
}

// HasProfileTimestamp returns a boolean if a field has been set.
func (o *MonitorRequestReference) HasProfileTimestamp() bool {
	if o != nil && o.ProfileTimestamp.IsSet() {
		return true
	}

	return false
}

// SetProfileTimestamp gets a reference to the given NullableInt64 and assigns it to the ProfileTimestamp field.
func (o *MonitorRequestReference) SetProfileTimestamp(v int64) {
	o.ProfileTimestamp.Set(&v)
}
// SetProfileTimestampNil sets the value for ProfileTimestamp to be an explicit nil
func (o *MonitorRequestReference) SetProfileTimestampNil() {
	o.ProfileTimestamp.Set(nil)
}

// UnsetProfileTimestamp ensures that no value is present for ProfileTimestamp, not even an explicit nil
func (o *MonitorRequestReference) UnsetProfileTimestamp() {
	o.ProfileTimestamp.Unset()
}

// GetProfileId returns the ProfileId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MonitorRequestReference) GetProfileId() string {
	if o == nil || isNil(o.ProfileId.Get()) {
		var ret string
		return ret
	}
	return *o.ProfileId.Get()
}

// GetProfileIdOk returns a tuple with the ProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MonitorRequestReference) GetProfileIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProfileId.Get(), o.ProfileId.IsSet()
}

// HasProfileId returns a boolean if a field has been set.
func (o *MonitorRequestReference) HasProfileId() bool {
	if o != nil && o.ProfileId.IsSet() {
		return true
	}

	return false
}

// SetProfileId gets a reference to the given NullableString and assigns it to the ProfileId field.
func (o *MonitorRequestReference) SetProfileId(v string) {
	o.ProfileId.Set(&v)
}
// SetProfileIdNil sets the value for ProfileId to be an explicit nil
func (o *MonitorRequestReference) SetProfileIdNil() {
	o.ProfileId.Set(nil)
}

// UnsetProfileId ensures that no value is present for ProfileId, not even an explicit nil
func (o *MonitorRequestReference) UnsetProfileId() {
	o.ProfileId.Unset()
}

// GetNumBatches returns the NumBatches field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MonitorRequestReference) GetNumBatches() int32 {
	if o == nil || isNil(o.NumBatches.Get()) {
		var ret int32
		return ret
	}
	return *o.NumBatches.Get()
}

// GetNumBatchesOk returns a tuple with the NumBatches field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MonitorRequestReference) GetNumBatchesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.NumBatches.Get(), o.NumBatches.IsSet()
}

// HasNumBatches returns a boolean if a field has been set.
func (o *MonitorRequestReference) HasNumBatches() bool {
	if o != nil && o.NumBatches.IsSet() {
		return true
	}

	return false
}

// SetNumBatches gets a reference to the given NullableInt32 and assigns it to the NumBatches field.
func (o *MonitorRequestReference) SetNumBatches(v int32) {
	o.NumBatches.Set(&v)
}
// SetNumBatchesNil sets the value for NumBatches to be an explicit nil
func (o *MonitorRequestReference) SetNumBatchesNil() {
	o.NumBatches.Set(nil)
}

// UnsetNumBatches ensures that no value is present for NumBatches, not even an explicit nil
func (o *MonitorRequestReference) UnsetNumBatches() {
	o.NumBatches.Unset()
}

func (o MonitorRequestReference) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MonitorRequestReference) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if o.ProfileTimestamp.IsSet() {
		toSerialize["profileTimestamp"] = o.ProfileTimestamp.Get()
	}
	if o.ProfileId.IsSet() {
		toSerialize["profileId"] = o.ProfileId.Get()
	}
	if o.NumBatches.IsSet() {
		toSerialize["numBatches"] = o.NumBatches.Get()
	}
	return toSerialize, nil
}

type NullableMonitorRequestReference struct {
	value *MonitorRequestReference
	isSet bool
}

func (v NullableMonitorRequestReference) Get() *MonitorRequestReference {
	return v.value
}

func (v *NullableMonitorRequestReference) Set(val *MonitorRequestReference) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitorRequestReference) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitorRequestReference) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitorRequestReference(val *MonitorRequestReference) *NullableMonitorRequestReference {
	return &NullableMonitorRequestReference{value: val, isSet: true}
}

func (v NullableMonitorRequestReference) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitorRequestReference) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


