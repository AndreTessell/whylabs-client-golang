/*
WhyLabs Songbird

WhyLabs API that enables end-to-end AI observability

API version: 0.1
Contact: support@whylabs.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DTOSparkSubmitTaskDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DTOSparkSubmitTaskDTO{}

// DTOSparkSubmitTaskDTO struct for DTOSparkSubmitTaskDTO
type DTOSparkSubmitTaskDTO struct {
	Parameters []map[string]interface{} `json:"parameters,omitempty"`
}

// NewDTOSparkSubmitTaskDTO instantiates a new DTOSparkSubmitTaskDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDTOSparkSubmitTaskDTO() *DTOSparkSubmitTaskDTO {
	this := DTOSparkSubmitTaskDTO{}
	return &this
}

// NewDTOSparkSubmitTaskDTOWithDefaults instantiates a new DTOSparkSubmitTaskDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDTOSparkSubmitTaskDTOWithDefaults() *DTOSparkSubmitTaskDTO {
	this := DTOSparkSubmitTaskDTO{}
	return &this
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *DTOSparkSubmitTaskDTO) GetParameters() []map[string]interface{} {
	if o == nil || isNil(o.Parameters) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DTOSparkSubmitTaskDTO) GetParametersOk() ([]map[string]interface{}, bool) {
	if o == nil || isNil(o.Parameters) {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *DTOSparkSubmitTaskDTO) HasParameters() bool {
	if o != nil && !isNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given []map[string]interface{} and assigns it to the Parameters field.
func (o *DTOSparkSubmitTaskDTO) SetParameters(v []map[string]interface{}) {
	o.Parameters = v
}

func (o DTOSparkSubmitTaskDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DTOSparkSubmitTaskDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Parameters) {
		toSerialize["parameters"] = o.Parameters
	}
	return toSerialize, nil
}

type NullableDTOSparkSubmitTaskDTO struct {
	value *DTOSparkSubmitTaskDTO
	isSet bool
}

func (v NullableDTOSparkSubmitTaskDTO) Get() *DTOSparkSubmitTaskDTO {
	return v.value
}

func (v *NullableDTOSparkSubmitTaskDTO) Set(val *DTOSparkSubmitTaskDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableDTOSparkSubmitTaskDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableDTOSparkSubmitTaskDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDTOSparkSubmitTaskDTO(val *DTOSparkSubmitTaskDTO) *NullableDTOSparkSubmitTaskDTO {
	return &NullableDTOSparkSubmitTaskDTO{value: val, isSet: true}
}

func (v NullableDTOSparkSubmitTaskDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDTOSparkSubmitTaskDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


