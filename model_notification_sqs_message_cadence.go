/*
WhyLabs Songbird

WhyLabs API that enables end-to-end AI observability

API version: 0.1
Contact: support@whylabs.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// NotificationSqsMessageCadence the model 'NotificationSqsMessageCadence'
type NotificationSqsMessageCadence string

// List of NotificationSqsMessageCadence
const (
	HOURLY NotificationSqsMessageCadence = "HOURLY"
	DAILY NotificationSqsMessageCadence = "DAILY"
	WEEKLY NotificationSqsMessageCadence = "WEEKLY"
	INDIVIDUAL NotificationSqsMessageCadence = "INDIVIDUAL"
)

// All allowed values of NotificationSqsMessageCadence enum
var AllowedNotificationSqsMessageCadenceEnumValues = []NotificationSqsMessageCadence{
	"HOURLY",
	"DAILY",
	"WEEKLY",
	"INDIVIDUAL",
}

func (v *NotificationSqsMessageCadence) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := NotificationSqsMessageCadence(value)
	for _, existing := range AllowedNotificationSqsMessageCadenceEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid NotificationSqsMessageCadence", value)
}

// NewNotificationSqsMessageCadenceFromValue returns a pointer to a valid NotificationSqsMessageCadence
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewNotificationSqsMessageCadenceFromValue(v string) (*NotificationSqsMessageCadence, error) {
	ev := NotificationSqsMessageCadence(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for NotificationSqsMessageCadence: valid values are %v", v, AllowedNotificationSqsMessageCadenceEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v NotificationSqsMessageCadence) IsValid() bool {
	for _, existing := range AllowedNotificationSqsMessageCadenceEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to NotificationSqsMessageCadence value
func (v NotificationSqsMessageCadence) Ptr() *NotificationSqsMessageCadence {
	return &v
}

type NullableNotificationSqsMessageCadence struct {
	value *NotificationSqsMessageCadence
	isSet bool
}

func (v NullableNotificationSqsMessageCadence) Get() *NotificationSqsMessageCadence {
	return v.value
}

func (v *NullableNotificationSqsMessageCadence) Set(val *NotificationSqsMessageCadence) {
	v.value = val
	v.isSet = true
}

func (v NullableNotificationSqsMessageCadence) IsSet() bool {
	return v.isSet
}

func (v *NullableNotificationSqsMessageCadence) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotificationSqsMessageCadence(val *NotificationSqsMessageCadence) *NullableNotificationSqsMessageCadence {
	return &NullableNotificationSqsMessageCadence{value: val, isSet: true}
}

func (v NullableNotificationSqsMessageCadence) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotificationSqsMessageCadence) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

