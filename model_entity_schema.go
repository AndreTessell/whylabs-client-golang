/*
WhyLabs Songbird

WhyLabs API that enables end-to-end AI observability

API version: 0.1
Contact: support@whylabs.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the EntitySchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EntitySchema{}

// EntitySchema Entity schema for a dataset
type EntitySchema struct {
	// Column schema for a given column
	Columns map[string]ColumnSchema `json:"columns"`
	Metadata *SchemaMetadata `json:"metadata,omitempty"`
}

// NewEntitySchema instantiates a new EntitySchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntitySchema(columns map[string]ColumnSchema) *EntitySchema {
	this := EntitySchema{}
	this.Columns = columns
	return &this
}

// NewEntitySchemaWithDefaults instantiates a new EntitySchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntitySchemaWithDefaults() *EntitySchema {
	this := EntitySchema{}
	return &this
}

// GetColumns returns the Columns field value
func (o *EntitySchema) GetColumns() map[string]ColumnSchema {
	if o == nil {
		var ret map[string]ColumnSchema
		return ret
	}

	return o.Columns
}

// GetColumnsOk returns a tuple with the Columns field value
// and a boolean to check if the value has been set.
func (o *EntitySchema) GetColumnsOk() (*map[string]ColumnSchema, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Columns, true
}

// SetColumns sets field value
func (o *EntitySchema) SetColumns(v map[string]ColumnSchema) {
	o.Columns = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *EntitySchema) GetMetadata() SchemaMetadata {
	if o == nil || isNil(o.Metadata) {
		var ret SchemaMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitySchema) GetMetadataOk() (*SchemaMetadata, bool) {
	if o == nil || isNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *EntitySchema) HasMetadata() bool {
	if o != nil && !isNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given SchemaMetadata and assigns it to the Metadata field.
func (o *EntitySchema) SetMetadata(v SchemaMetadata) {
	o.Metadata = &v
}

func (o EntitySchema) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EntitySchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["columns"] = o.Columns
	if !isNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullableEntitySchema struct {
	value *EntitySchema
	isSet bool
}

func (v NullableEntitySchema) Get() *EntitySchema {
	return v.value
}

func (v *NullableEntitySchema) Set(val *EntitySchema) {
	v.value = val
	v.isSet = true
}

func (v NullableEntitySchema) IsSet() bool {
	return v.isSet
}

func (v *NullableEntitySchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntitySchema(val *EntitySchema) *NullableEntitySchema {
	return &NullableEntitySchema{value: val, isSet: true}
}

func (v NullableEntitySchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntitySchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


