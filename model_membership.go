/*
WhyLabs Songbird

WhyLabs API that enables end-to-end AI observability

API version: 0.1
Contact: support@whylabs.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Membership type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Membership{}

// Membership Response for the get memberships
type Membership struct {
	OrgId string `json:"orgId"`
	Default *bool `json:"default,omitempty"`
	Role Role `json:"role"`
	UserId string `json:"userId"`
	Email string `json:"email"`
}

// NewMembership instantiates a new Membership object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMembership(orgId string, role Role, userId string, email string) *Membership {
	this := Membership{}
	this.OrgId = orgId
	this.Role = role
	this.UserId = userId
	this.Email = email
	return &this
}

// NewMembershipWithDefaults instantiates a new Membership object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMembershipWithDefaults() *Membership {
	this := Membership{}
	return &this
}

// GetOrgId returns the OrgId field value
func (o *Membership) GetOrgId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value
// and a boolean to check if the value has been set.
func (o *Membership) GetOrgIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrgId, true
}

// SetOrgId sets field value
func (o *Membership) SetOrgId(v string) {
	o.OrgId = v
}

// GetDefault returns the Default field value if set, zero value otherwise.
func (o *Membership) GetDefault() bool {
	if o == nil || isNil(o.Default) {
		var ret bool
		return ret
	}
	return *o.Default
}

// GetDefaultOk returns a tuple with the Default field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Membership) GetDefaultOk() (*bool, bool) {
	if o == nil || isNil(o.Default) {
		return nil, false
	}
	return o.Default, true
}

// HasDefault returns a boolean if a field has been set.
func (o *Membership) HasDefault() bool {
	if o != nil && !isNil(o.Default) {
		return true
	}

	return false
}

// SetDefault gets a reference to the given bool and assigns it to the Default field.
func (o *Membership) SetDefault(v bool) {
	o.Default = &v
}

// GetRole returns the Role field value
func (o *Membership) GetRole() Role {
	if o == nil {
		var ret Role
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *Membership) GetRoleOk() (*Role, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *Membership) SetRole(v Role) {
	o.Role = v
}

// GetUserId returns the UserId field value
func (o *Membership) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *Membership) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *Membership) SetUserId(v string) {
	o.UserId = v
}

// GetEmail returns the Email field value
func (o *Membership) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *Membership) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *Membership) SetEmail(v string) {
	o.Email = v
}

func (o Membership) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Membership) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["orgId"] = o.OrgId
	if !isNil(o.Default) {
		toSerialize["default"] = o.Default
	}
	toSerialize["role"] = o.Role
	toSerialize["userId"] = o.UserId
	toSerialize["email"] = o.Email
	return toSerialize, nil
}

type NullableMembership struct {
	value *Membership
	isSet bool
}

func (v NullableMembership) Get() *Membership {
	return v.value
}

func (v *NullableMembership) Set(val *Membership) {
	v.value = val
	v.isSet = true
}

func (v NullableMembership) IsSet() bool {
	return v.isSet
}

func (v *NullableMembership) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMembership(val *Membership) *NullableMembership {
	return &NullableMembership{value: val, isSet: true}
}

func (v NullableMembership) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMembership) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


