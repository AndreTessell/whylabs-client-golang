/*
WhyLabs Songbird

WhyLabs API that enables end-to-end AI observability

API version: 0.1
Contact: support@whylabs.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DTOSparkJarTaskDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DTOSparkJarTaskDTO{}

// DTOSparkJarTaskDTO struct for DTOSparkJarTaskDTO
type DTOSparkJarTaskDTO struct {
	JarUri *string `json:"jarUri,omitempty"`
	MainClassName *string `json:"mainClassName,omitempty"`
	Parameters []map[string]interface{} `json:"parameters,omitempty"`
	RunAsRepl *bool `json:"runAsRepl,omitempty"`
}

// NewDTOSparkJarTaskDTO instantiates a new DTOSparkJarTaskDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDTOSparkJarTaskDTO() *DTOSparkJarTaskDTO {
	this := DTOSparkJarTaskDTO{}
	return &this
}

// NewDTOSparkJarTaskDTOWithDefaults instantiates a new DTOSparkJarTaskDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDTOSparkJarTaskDTOWithDefaults() *DTOSparkJarTaskDTO {
	this := DTOSparkJarTaskDTO{}
	return &this
}

// GetJarUri returns the JarUri field value if set, zero value otherwise.
func (o *DTOSparkJarTaskDTO) GetJarUri() string {
	if o == nil || isNil(o.JarUri) {
		var ret string
		return ret
	}
	return *o.JarUri
}

// GetJarUriOk returns a tuple with the JarUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DTOSparkJarTaskDTO) GetJarUriOk() (*string, bool) {
	if o == nil || isNil(o.JarUri) {
		return nil, false
	}
	return o.JarUri, true
}

// HasJarUri returns a boolean if a field has been set.
func (o *DTOSparkJarTaskDTO) HasJarUri() bool {
	if o != nil && !isNil(o.JarUri) {
		return true
	}

	return false
}

// SetJarUri gets a reference to the given string and assigns it to the JarUri field.
func (o *DTOSparkJarTaskDTO) SetJarUri(v string) {
	o.JarUri = &v
}

// GetMainClassName returns the MainClassName field value if set, zero value otherwise.
func (o *DTOSparkJarTaskDTO) GetMainClassName() string {
	if o == nil || isNil(o.MainClassName) {
		var ret string
		return ret
	}
	return *o.MainClassName
}

// GetMainClassNameOk returns a tuple with the MainClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DTOSparkJarTaskDTO) GetMainClassNameOk() (*string, bool) {
	if o == nil || isNil(o.MainClassName) {
		return nil, false
	}
	return o.MainClassName, true
}

// HasMainClassName returns a boolean if a field has been set.
func (o *DTOSparkJarTaskDTO) HasMainClassName() bool {
	if o != nil && !isNil(o.MainClassName) {
		return true
	}

	return false
}

// SetMainClassName gets a reference to the given string and assigns it to the MainClassName field.
func (o *DTOSparkJarTaskDTO) SetMainClassName(v string) {
	o.MainClassName = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *DTOSparkJarTaskDTO) GetParameters() []map[string]interface{} {
	if o == nil || isNil(o.Parameters) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DTOSparkJarTaskDTO) GetParametersOk() ([]map[string]interface{}, bool) {
	if o == nil || isNil(o.Parameters) {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *DTOSparkJarTaskDTO) HasParameters() bool {
	if o != nil && !isNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given []map[string]interface{} and assigns it to the Parameters field.
func (o *DTOSparkJarTaskDTO) SetParameters(v []map[string]interface{}) {
	o.Parameters = v
}

// GetRunAsRepl returns the RunAsRepl field value if set, zero value otherwise.
func (o *DTOSparkJarTaskDTO) GetRunAsRepl() bool {
	if o == nil || isNil(o.RunAsRepl) {
		var ret bool
		return ret
	}
	return *o.RunAsRepl
}

// GetRunAsReplOk returns a tuple with the RunAsRepl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DTOSparkJarTaskDTO) GetRunAsReplOk() (*bool, bool) {
	if o == nil || isNil(o.RunAsRepl) {
		return nil, false
	}
	return o.RunAsRepl, true
}

// HasRunAsRepl returns a boolean if a field has been set.
func (o *DTOSparkJarTaskDTO) HasRunAsRepl() bool {
	if o != nil && !isNil(o.RunAsRepl) {
		return true
	}

	return false
}

// SetRunAsRepl gets a reference to the given bool and assigns it to the RunAsRepl field.
func (o *DTOSparkJarTaskDTO) SetRunAsRepl(v bool) {
	o.RunAsRepl = &v
}

func (o DTOSparkJarTaskDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DTOSparkJarTaskDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.JarUri) {
		toSerialize["jarUri"] = o.JarUri
	}
	if !isNil(o.MainClassName) {
		toSerialize["mainClassName"] = o.MainClassName
	}
	if !isNil(o.Parameters) {
		toSerialize["parameters"] = o.Parameters
	}
	if !isNil(o.RunAsRepl) {
		toSerialize["runAsRepl"] = o.RunAsRepl
	}
	return toSerialize, nil
}

type NullableDTOSparkJarTaskDTO struct {
	value *DTOSparkJarTaskDTO
	isSet bool
}

func (v NullableDTOSparkJarTaskDTO) Get() *DTOSparkJarTaskDTO {
	return v.value
}

func (v *NullableDTOSparkJarTaskDTO) Set(val *DTOSparkJarTaskDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableDTOSparkJarTaskDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableDTOSparkJarTaskDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDTOSparkJarTaskDTO(val *DTOSparkJarTaskDTO) *NullableDTOSparkJarTaskDTO {
	return &NullableDTOSparkJarTaskDTO{value: val, isSet: true}
}

func (v NullableDTOSparkJarTaskDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDTOSparkJarTaskDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


