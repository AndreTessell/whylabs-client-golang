/*
WhyLabs Songbird

WhyLabs API that enables end-to-end AI observability

API version: 0.1
Contact: support@whylabs.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MonitorConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MonitorConfig{}

// MonitorConfig Object contains serialized monitor config
type MonitorConfig struct {
	OrgId *string `json:"orgId,omitempty"`
	ModelId *string `json:"modelId,omitempty"`
	Segment *Segment `json:"segment,omitempty"`
	Config NullableString `json:"config,omitempty"`
	ConfigBase NullableString `json:"configBase,omitempty"`
	ConfigAnalyzers NullableString `json:"configAnalyzers,omitempty"`
	ConfigMonitors NullableString `json:"configMonitors,omitempty"`
	Version NullableInt64 `json:"version,omitempty"`
	UpdatedTime NullableInt64 `json:"updatedTime,omitempty"`
}

// NewMonitorConfig instantiates a new MonitorConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitorConfig() *MonitorConfig {
	this := MonitorConfig{}
	return &this
}

// NewMonitorConfigWithDefaults instantiates a new MonitorConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitorConfigWithDefaults() *MonitorConfig {
	this := MonitorConfig{}
	return &this
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *MonitorConfig) GetOrgId() string {
	if o == nil || isNil(o.OrgId) {
		var ret string
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorConfig) GetOrgIdOk() (*string, bool) {
	if o == nil || isNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *MonitorConfig) HasOrgId() bool {
	if o != nil && !isNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given string and assigns it to the OrgId field.
func (o *MonitorConfig) SetOrgId(v string) {
	o.OrgId = &v
}

// GetModelId returns the ModelId field value if set, zero value otherwise.
func (o *MonitorConfig) GetModelId() string {
	if o == nil || isNil(o.ModelId) {
		var ret string
		return ret
	}
	return *o.ModelId
}

// GetModelIdOk returns a tuple with the ModelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorConfig) GetModelIdOk() (*string, bool) {
	if o == nil || isNil(o.ModelId) {
		return nil, false
	}
	return o.ModelId, true
}

// HasModelId returns a boolean if a field has been set.
func (o *MonitorConfig) HasModelId() bool {
	if o != nil && !isNil(o.ModelId) {
		return true
	}

	return false
}

// SetModelId gets a reference to the given string and assigns it to the ModelId field.
func (o *MonitorConfig) SetModelId(v string) {
	o.ModelId = &v
}

// GetSegment returns the Segment field value if set, zero value otherwise.
func (o *MonitorConfig) GetSegment() Segment {
	if o == nil || isNil(o.Segment) {
		var ret Segment
		return ret
	}
	return *o.Segment
}

// GetSegmentOk returns a tuple with the Segment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorConfig) GetSegmentOk() (*Segment, bool) {
	if o == nil || isNil(o.Segment) {
		return nil, false
	}
	return o.Segment, true
}

// HasSegment returns a boolean if a field has been set.
func (o *MonitorConfig) HasSegment() bool {
	if o != nil && !isNil(o.Segment) {
		return true
	}

	return false
}

// SetSegment gets a reference to the given Segment and assigns it to the Segment field.
func (o *MonitorConfig) SetSegment(v Segment) {
	o.Segment = &v
}

// GetConfig returns the Config field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MonitorConfig) GetConfig() string {
	if o == nil || isNil(o.Config.Get()) {
		var ret string
		return ret
	}
	return *o.Config.Get()
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MonitorConfig) GetConfigOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Config.Get(), o.Config.IsSet()
}

// HasConfig returns a boolean if a field has been set.
func (o *MonitorConfig) HasConfig() bool {
	if o != nil && o.Config.IsSet() {
		return true
	}

	return false
}

// SetConfig gets a reference to the given NullableString and assigns it to the Config field.
func (o *MonitorConfig) SetConfig(v string) {
	o.Config.Set(&v)
}
// SetConfigNil sets the value for Config to be an explicit nil
func (o *MonitorConfig) SetConfigNil() {
	o.Config.Set(nil)
}

// UnsetConfig ensures that no value is present for Config, not even an explicit nil
func (o *MonitorConfig) UnsetConfig() {
	o.Config.Unset()
}

// GetConfigBase returns the ConfigBase field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MonitorConfig) GetConfigBase() string {
	if o == nil || isNil(o.ConfigBase.Get()) {
		var ret string
		return ret
	}
	return *o.ConfigBase.Get()
}

// GetConfigBaseOk returns a tuple with the ConfigBase field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MonitorConfig) GetConfigBaseOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConfigBase.Get(), o.ConfigBase.IsSet()
}

// HasConfigBase returns a boolean if a field has been set.
func (o *MonitorConfig) HasConfigBase() bool {
	if o != nil && o.ConfigBase.IsSet() {
		return true
	}

	return false
}

// SetConfigBase gets a reference to the given NullableString and assigns it to the ConfigBase field.
func (o *MonitorConfig) SetConfigBase(v string) {
	o.ConfigBase.Set(&v)
}
// SetConfigBaseNil sets the value for ConfigBase to be an explicit nil
func (o *MonitorConfig) SetConfigBaseNil() {
	o.ConfigBase.Set(nil)
}

// UnsetConfigBase ensures that no value is present for ConfigBase, not even an explicit nil
func (o *MonitorConfig) UnsetConfigBase() {
	o.ConfigBase.Unset()
}

// GetConfigAnalyzers returns the ConfigAnalyzers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MonitorConfig) GetConfigAnalyzers() string {
	if o == nil || isNil(o.ConfigAnalyzers.Get()) {
		var ret string
		return ret
	}
	return *o.ConfigAnalyzers.Get()
}

// GetConfigAnalyzersOk returns a tuple with the ConfigAnalyzers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MonitorConfig) GetConfigAnalyzersOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConfigAnalyzers.Get(), o.ConfigAnalyzers.IsSet()
}

// HasConfigAnalyzers returns a boolean if a field has been set.
func (o *MonitorConfig) HasConfigAnalyzers() bool {
	if o != nil && o.ConfigAnalyzers.IsSet() {
		return true
	}

	return false
}

// SetConfigAnalyzers gets a reference to the given NullableString and assigns it to the ConfigAnalyzers field.
func (o *MonitorConfig) SetConfigAnalyzers(v string) {
	o.ConfigAnalyzers.Set(&v)
}
// SetConfigAnalyzersNil sets the value for ConfigAnalyzers to be an explicit nil
func (o *MonitorConfig) SetConfigAnalyzersNil() {
	o.ConfigAnalyzers.Set(nil)
}

// UnsetConfigAnalyzers ensures that no value is present for ConfigAnalyzers, not even an explicit nil
func (o *MonitorConfig) UnsetConfigAnalyzers() {
	o.ConfigAnalyzers.Unset()
}

// GetConfigMonitors returns the ConfigMonitors field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MonitorConfig) GetConfigMonitors() string {
	if o == nil || isNil(o.ConfigMonitors.Get()) {
		var ret string
		return ret
	}
	return *o.ConfigMonitors.Get()
}

// GetConfigMonitorsOk returns a tuple with the ConfigMonitors field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MonitorConfig) GetConfigMonitorsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConfigMonitors.Get(), o.ConfigMonitors.IsSet()
}

// HasConfigMonitors returns a boolean if a field has been set.
func (o *MonitorConfig) HasConfigMonitors() bool {
	if o != nil && o.ConfigMonitors.IsSet() {
		return true
	}

	return false
}

// SetConfigMonitors gets a reference to the given NullableString and assigns it to the ConfigMonitors field.
func (o *MonitorConfig) SetConfigMonitors(v string) {
	o.ConfigMonitors.Set(&v)
}
// SetConfigMonitorsNil sets the value for ConfigMonitors to be an explicit nil
func (o *MonitorConfig) SetConfigMonitorsNil() {
	o.ConfigMonitors.Set(nil)
}

// UnsetConfigMonitors ensures that no value is present for ConfigMonitors, not even an explicit nil
func (o *MonitorConfig) UnsetConfigMonitors() {
	o.ConfigMonitors.Unset()
}

// GetVersion returns the Version field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MonitorConfig) GetVersion() int64 {
	if o == nil || isNil(o.Version.Get()) {
		var ret int64
		return ret
	}
	return *o.Version.Get()
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MonitorConfig) GetVersionOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Version.Get(), o.Version.IsSet()
}

// HasVersion returns a boolean if a field has been set.
func (o *MonitorConfig) HasVersion() bool {
	if o != nil && o.Version.IsSet() {
		return true
	}

	return false
}

// SetVersion gets a reference to the given NullableInt64 and assigns it to the Version field.
func (o *MonitorConfig) SetVersion(v int64) {
	o.Version.Set(&v)
}
// SetVersionNil sets the value for Version to be an explicit nil
func (o *MonitorConfig) SetVersionNil() {
	o.Version.Set(nil)
}

// UnsetVersion ensures that no value is present for Version, not even an explicit nil
func (o *MonitorConfig) UnsetVersion() {
	o.Version.Unset()
}

// GetUpdatedTime returns the UpdatedTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MonitorConfig) GetUpdatedTime() int64 {
	if o == nil || isNil(o.UpdatedTime.Get()) {
		var ret int64
		return ret
	}
	return *o.UpdatedTime.Get()
}

// GetUpdatedTimeOk returns a tuple with the UpdatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MonitorConfig) GetUpdatedTimeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedTime.Get(), o.UpdatedTime.IsSet()
}

// HasUpdatedTime returns a boolean if a field has been set.
func (o *MonitorConfig) HasUpdatedTime() bool {
	if o != nil && o.UpdatedTime.IsSet() {
		return true
	}

	return false
}

// SetUpdatedTime gets a reference to the given NullableInt64 and assigns it to the UpdatedTime field.
func (o *MonitorConfig) SetUpdatedTime(v int64) {
	o.UpdatedTime.Set(&v)
}
// SetUpdatedTimeNil sets the value for UpdatedTime to be an explicit nil
func (o *MonitorConfig) SetUpdatedTimeNil() {
	o.UpdatedTime.Set(nil)
}

// UnsetUpdatedTime ensures that no value is present for UpdatedTime, not even an explicit nil
func (o *MonitorConfig) UnsetUpdatedTime() {
	o.UpdatedTime.Unset()
}

func (o MonitorConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MonitorConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.OrgId) {
		toSerialize["orgId"] = o.OrgId
	}
	if !isNil(o.ModelId) {
		toSerialize["modelId"] = o.ModelId
	}
	if !isNil(o.Segment) {
		toSerialize["segment"] = o.Segment
	}
	if o.Config.IsSet() {
		toSerialize["config"] = o.Config.Get()
	}
	if o.ConfigBase.IsSet() {
		toSerialize["configBase"] = o.ConfigBase.Get()
	}
	if o.ConfigAnalyzers.IsSet() {
		toSerialize["configAnalyzers"] = o.ConfigAnalyzers.Get()
	}
	if o.ConfigMonitors.IsSet() {
		toSerialize["configMonitors"] = o.ConfigMonitors.Get()
	}
	if o.Version.IsSet() {
		toSerialize["version"] = o.Version.Get()
	}
	if o.UpdatedTime.IsSet() {
		toSerialize["updatedTime"] = o.UpdatedTime.Get()
	}
	return toSerialize, nil
}

type NullableMonitorConfig struct {
	value *MonitorConfig
	isSet bool
}

func (v NullableMonitorConfig) Get() *MonitorConfig {
	return v.value
}

func (v *NullableMonitorConfig) Set(val *MonitorConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitorConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitorConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitorConfig(val *MonitorConfig) *NullableMonitorConfig {
	return &NullableMonitorConfig{value: val, isSet: true}
}

func (v NullableMonitorConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitorConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


