/*
WhyLabs Songbird

WhyLabs API that enables end-to-end AI observability

API version: 0.1
Contact: support@whylabs.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DTOAwsAttributesDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DTOAwsAttributesDTO{}

// DTOAwsAttributesDTO struct for DTOAwsAttributesDTO
type DTOAwsAttributesDTO struct {
	FirstOnDemand *int32 `json:"firstOnDemand,omitempty"`
	Availability *DTOAwsAvailabilityDTO `json:"availability,omitempty"`
	ZoneId *string `json:"zoneId,omitempty"`
	InstanceProfileArn *string `json:"instanceProfileArn,omitempty"`
	SpotBidPricePercent *int32 `json:"spotBidPricePercent,omitempty"`
	EbsVolumeType *DTOEbsVolumeTypeDTO `json:"ebsVolumeType,omitempty"`
	EbsVolumeCount *int32 `json:"ebsVolumeCount,omitempty"`
	EbsVolumeSize *int32 `json:"ebsVolumeSize,omitempty"`
}

// NewDTOAwsAttributesDTO instantiates a new DTOAwsAttributesDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDTOAwsAttributesDTO() *DTOAwsAttributesDTO {
	this := DTOAwsAttributesDTO{}
	return &this
}

// NewDTOAwsAttributesDTOWithDefaults instantiates a new DTOAwsAttributesDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDTOAwsAttributesDTOWithDefaults() *DTOAwsAttributesDTO {
	this := DTOAwsAttributesDTO{}
	return &this
}

// GetFirstOnDemand returns the FirstOnDemand field value if set, zero value otherwise.
func (o *DTOAwsAttributesDTO) GetFirstOnDemand() int32 {
	if o == nil || isNil(o.FirstOnDemand) {
		var ret int32
		return ret
	}
	return *o.FirstOnDemand
}

// GetFirstOnDemandOk returns a tuple with the FirstOnDemand field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DTOAwsAttributesDTO) GetFirstOnDemandOk() (*int32, bool) {
	if o == nil || isNil(o.FirstOnDemand) {
		return nil, false
	}
	return o.FirstOnDemand, true
}

// HasFirstOnDemand returns a boolean if a field has been set.
func (o *DTOAwsAttributesDTO) HasFirstOnDemand() bool {
	if o != nil && !isNil(o.FirstOnDemand) {
		return true
	}

	return false
}

// SetFirstOnDemand gets a reference to the given int32 and assigns it to the FirstOnDemand field.
func (o *DTOAwsAttributesDTO) SetFirstOnDemand(v int32) {
	o.FirstOnDemand = &v
}

// GetAvailability returns the Availability field value if set, zero value otherwise.
func (o *DTOAwsAttributesDTO) GetAvailability() DTOAwsAvailabilityDTO {
	if o == nil || isNil(o.Availability) {
		var ret DTOAwsAvailabilityDTO
		return ret
	}
	return *o.Availability
}

// GetAvailabilityOk returns a tuple with the Availability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DTOAwsAttributesDTO) GetAvailabilityOk() (*DTOAwsAvailabilityDTO, bool) {
	if o == nil || isNil(o.Availability) {
		return nil, false
	}
	return o.Availability, true
}

// HasAvailability returns a boolean if a field has been set.
func (o *DTOAwsAttributesDTO) HasAvailability() bool {
	if o != nil && !isNil(o.Availability) {
		return true
	}

	return false
}

// SetAvailability gets a reference to the given DTOAwsAvailabilityDTO and assigns it to the Availability field.
func (o *DTOAwsAttributesDTO) SetAvailability(v DTOAwsAvailabilityDTO) {
	o.Availability = &v
}

// GetZoneId returns the ZoneId field value if set, zero value otherwise.
func (o *DTOAwsAttributesDTO) GetZoneId() string {
	if o == nil || isNil(o.ZoneId) {
		var ret string
		return ret
	}
	return *o.ZoneId
}

// GetZoneIdOk returns a tuple with the ZoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DTOAwsAttributesDTO) GetZoneIdOk() (*string, bool) {
	if o == nil || isNil(o.ZoneId) {
		return nil, false
	}
	return o.ZoneId, true
}

// HasZoneId returns a boolean if a field has been set.
func (o *DTOAwsAttributesDTO) HasZoneId() bool {
	if o != nil && !isNil(o.ZoneId) {
		return true
	}

	return false
}

// SetZoneId gets a reference to the given string and assigns it to the ZoneId field.
func (o *DTOAwsAttributesDTO) SetZoneId(v string) {
	o.ZoneId = &v
}

// GetInstanceProfileArn returns the InstanceProfileArn field value if set, zero value otherwise.
func (o *DTOAwsAttributesDTO) GetInstanceProfileArn() string {
	if o == nil || isNil(o.InstanceProfileArn) {
		var ret string
		return ret
	}
	return *o.InstanceProfileArn
}

// GetInstanceProfileArnOk returns a tuple with the InstanceProfileArn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DTOAwsAttributesDTO) GetInstanceProfileArnOk() (*string, bool) {
	if o == nil || isNil(o.InstanceProfileArn) {
		return nil, false
	}
	return o.InstanceProfileArn, true
}

// HasInstanceProfileArn returns a boolean if a field has been set.
func (o *DTOAwsAttributesDTO) HasInstanceProfileArn() bool {
	if o != nil && !isNil(o.InstanceProfileArn) {
		return true
	}

	return false
}

// SetInstanceProfileArn gets a reference to the given string and assigns it to the InstanceProfileArn field.
func (o *DTOAwsAttributesDTO) SetInstanceProfileArn(v string) {
	o.InstanceProfileArn = &v
}

// GetSpotBidPricePercent returns the SpotBidPricePercent field value if set, zero value otherwise.
func (o *DTOAwsAttributesDTO) GetSpotBidPricePercent() int32 {
	if o == nil || isNil(o.SpotBidPricePercent) {
		var ret int32
		return ret
	}
	return *o.SpotBidPricePercent
}

// GetSpotBidPricePercentOk returns a tuple with the SpotBidPricePercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DTOAwsAttributesDTO) GetSpotBidPricePercentOk() (*int32, bool) {
	if o == nil || isNil(o.SpotBidPricePercent) {
		return nil, false
	}
	return o.SpotBidPricePercent, true
}

// HasSpotBidPricePercent returns a boolean if a field has been set.
func (o *DTOAwsAttributesDTO) HasSpotBidPricePercent() bool {
	if o != nil && !isNil(o.SpotBidPricePercent) {
		return true
	}

	return false
}

// SetSpotBidPricePercent gets a reference to the given int32 and assigns it to the SpotBidPricePercent field.
func (o *DTOAwsAttributesDTO) SetSpotBidPricePercent(v int32) {
	o.SpotBidPricePercent = &v
}

// GetEbsVolumeType returns the EbsVolumeType field value if set, zero value otherwise.
func (o *DTOAwsAttributesDTO) GetEbsVolumeType() DTOEbsVolumeTypeDTO {
	if o == nil || isNil(o.EbsVolumeType) {
		var ret DTOEbsVolumeTypeDTO
		return ret
	}
	return *o.EbsVolumeType
}

// GetEbsVolumeTypeOk returns a tuple with the EbsVolumeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DTOAwsAttributesDTO) GetEbsVolumeTypeOk() (*DTOEbsVolumeTypeDTO, bool) {
	if o == nil || isNil(o.EbsVolumeType) {
		return nil, false
	}
	return o.EbsVolumeType, true
}

// HasEbsVolumeType returns a boolean if a field has been set.
func (o *DTOAwsAttributesDTO) HasEbsVolumeType() bool {
	if o != nil && !isNil(o.EbsVolumeType) {
		return true
	}

	return false
}

// SetEbsVolumeType gets a reference to the given DTOEbsVolumeTypeDTO and assigns it to the EbsVolumeType field.
func (o *DTOAwsAttributesDTO) SetEbsVolumeType(v DTOEbsVolumeTypeDTO) {
	o.EbsVolumeType = &v
}

// GetEbsVolumeCount returns the EbsVolumeCount field value if set, zero value otherwise.
func (o *DTOAwsAttributesDTO) GetEbsVolumeCount() int32 {
	if o == nil || isNil(o.EbsVolumeCount) {
		var ret int32
		return ret
	}
	return *o.EbsVolumeCount
}

// GetEbsVolumeCountOk returns a tuple with the EbsVolumeCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DTOAwsAttributesDTO) GetEbsVolumeCountOk() (*int32, bool) {
	if o == nil || isNil(o.EbsVolumeCount) {
		return nil, false
	}
	return o.EbsVolumeCount, true
}

// HasEbsVolumeCount returns a boolean if a field has been set.
func (o *DTOAwsAttributesDTO) HasEbsVolumeCount() bool {
	if o != nil && !isNil(o.EbsVolumeCount) {
		return true
	}

	return false
}

// SetEbsVolumeCount gets a reference to the given int32 and assigns it to the EbsVolumeCount field.
func (o *DTOAwsAttributesDTO) SetEbsVolumeCount(v int32) {
	o.EbsVolumeCount = &v
}

// GetEbsVolumeSize returns the EbsVolumeSize field value if set, zero value otherwise.
func (o *DTOAwsAttributesDTO) GetEbsVolumeSize() int32 {
	if o == nil || isNil(o.EbsVolumeSize) {
		var ret int32
		return ret
	}
	return *o.EbsVolumeSize
}

// GetEbsVolumeSizeOk returns a tuple with the EbsVolumeSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DTOAwsAttributesDTO) GetEbsVolumeSizeOk() (*int32, bool) {
	if o == nil || isNil(o.EbsVolumeSize) {
		return nil, false
	}
	return o.EbsVolumeSize, true
}

// HasEbsVolumeSize returns a boolean if a field has been set.
func (o *DTOAwsAttributesDTO) HasEbsVolumeSize() bool {
	if o != nil && !isNil(o.EbsVolumeSize) {
		return true
	}

	return false
}

// SetEbsVolumeSize gets a reference to the given int32 and assigns it to the EbsVolumeSize field.
func (o *DTOAwsAttributesDTO) SetEbsVolumeSize(v int32) {
	o.EbsVolumeSize = &v
}

func (o DTOAwsAttributesDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DTOAwsAttributesDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.FirstOnDemand) {
		toSerialize["firstOnDemand"] = o.FirstOnDemand
	}
	if !isNil(o.Availability) {
		toSerialize["availability"] = o.Availability
	}
	if !isNil(o.ZoneId) {
		toSerialize["zoneId"] = o.ZoneId
	}
	if !isNil(o.InstanceProfileArn) {
		toSerialize["instanceProfileArn"] = o.InstanceProfileArn
	}
	if !isNil(o.SpotBidPricePercent) {
		toSerialize["spotBidPricePercent"] = o.SpotBidPricePercent
	}
	if !isNil(o.EbsVolumeType) {
		toSerialize["ebsVolumeType"] = o.EbsVolumeType
	}
	if !isNil(o.EbsVolumeCount) {
		toSerialize["ebsVolumeCount"] = o.EbsVolumeCount
	}
	if !isNil(o.EbsVolumeSize) {
		toSerialize["ebsVolumeSize"] = o.EbsVolumeSize
	}
	return toSerialize, nil
}

type NullableDTOAwsAttributesDTO struct {
	value *DTOAwsAttributesDTO
	isSet bool
}

func (v NullableDTOAwsAttributesDTO) Get() *DTOAwsAttributesDTO {
	return v.value
}

func (v *NullableDTOAwsAttributesDTO) Set(val *DTOAwsAttributesDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableDTOAwsAttributesDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableDTOAwsAttributesDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDTOAwsAttributesDTO(val *DTOAwsAttributesDTO) *NullableDTOAwsAttributesDTO {
	return &NullableDTOAwsAttributesDTO{value: val, isSet: true}
}

func (v NullableDTOAwsAttributesDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDTOAwsAttributesDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


