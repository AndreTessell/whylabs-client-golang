/*
WhyLabs Songbird

WhyLabs API that enables end-to-end AI observability

API version: 0.1
Contact: support@whylabs.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// MarketplaceDimensions the model 'MarketplaceDimensions'
type MarketplaceDimensions string

// List of MarketplaceDimensions
const (
	FREE MarketplaceDimensions = "FREE"
	MODELS_2 MarketplaceDimensions = "MODELS_2"
	MODELS_3 MarketplaceDimensions = "MODELS_3"
	MODELS_4 MarketplaceDimensions = "MODELS_4"
	MODELS_5 MarketplaceDimensions = "MODELS_5"
	BY_QUANTITY MarketplaceDimensions = "BY_QUANTITY"
	ENTERPRISE MarketplaceDimensions = "ENTERPRISE"
)

// All allowed values of MarketplaceDimensions enum
var AllowedMarketplaceDimensionsEnumValues = []MarketplaceDimensions{
	"FREE",
	"MODELS_2",
	"MODELS_3",
	"MODELS_4",
	"MODELS_5",
	"BY_QUANTITY",
	"ENTERPRISE",
}

func (v *MarketplaceDimensions) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MarketplaceDimensions(value)
	for _, existing := range AllowedMarketplaceDimensionsEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MarketplaceDimensions", value)
}

// NewMarketplaceDimensionsFromValue returns a pointer to a valid MarketplaceDimensions
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMarketplaceDimensionsFromValue(v string) (*MarketplaceDimensions, error) {
	ev := MarketplaceDimensions(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MarketplaceDimensions: valid values are %v", v, AllowedMarketplaceDimensionsEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MarketplaceDimensions) IsValid() bool {
	for _, existing := range AllowedMarketplaceDimensionsEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to MarketplaceDimensions value
func (v MarketplaceDimensions) Ptr() *MarketplaceDimensions {
	return &v
}

type NullableMarketplaceDimensions struct {
	value *MarketplaceDimensions
	isSet bool
}

func (v NullableMarketplaceDimensions) Get() *MarketplaceDimensions {
	return v.value
}

func (v *NullableMarketplaceDimensions) Set(val *MarketplaceDimensions) {
	v.value = val
	v.isSet = true
}

func (v NullableMarketplaceDimensions) IsSet() bool {
	return v.isSet
}

func (v *NullableMarketplaceDimensions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarketplaceDimensions(val *MarketplaceDimensions) *NullableMarketplaceDimensions {
	return &NullableMarketplaceDimensions{value: val, isSet: true}
}

func (v NullableMarketplaceDimensions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarketplaceDimensions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

