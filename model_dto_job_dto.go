/*
WhyLabs Songbird

WhyLabs API that enables end-to-end AI observability

API version: 0.1
Contact: support@whylabs.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the DTOJobDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DTOJobDTO{}

// DTOJobDTO struct for DTOJobDTO
type DTOJobDTO struct {
	JobId *int64 `json:"jobId,omitempty"`
	Settings *DTOJobSettingsDTO `json:"settings,omitempty"`
	CreatedTime *time.Time `json:"createdTime,omitempty"`
	CreatorUserName *string `json:"creatorUserName,omitempty"`
}

// NewDTOJobDTO instantiates a new DTOJobDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDTOJobDTO() *DTOJobDTO {
	this := DTOJobDTO{}
	return &this
}

// NewDTOJobDTOWithDefaults instantiates a new DTOJobDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDTOJobDTOWithDefaults() *DTOJobDTO {
	this := DTOJobDTO{}
	return &this
}

// GetJobId returns the JobId field value if set, zero value otherwise.
func (o *DTOJobDTO) GetJobId() int64 {
	if o == nil || isNil(o.JobId) {
		var ret int64
		return ret
	}
	return *o.JobId
}

// GetJobIdOk returns a tuple with the JobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DTOJobDTO) GetJobIdOk() (*int64, bool) {
	if o == nil || isNil(o.JobId) {
		return nil, false
	}
	return o.JobId, true
}

// HasJobId returns a boolean if a field has been set.
func (o *DTOJobDTO) HasJobId() bool {
	if o != nil && !isNil(o.JobId) {
		return true
	}

	return false
}

// SetJobId gets a reference to the given int64 and assigns it to the JobId field.
func (o *DTOJobDTO) SetJobId(v int64) {
	o.JobId = &v
}

// GetSettings returns the Settings field value if set, zero value otherwise.
func (o *DTOJobDTO) GetSettings() DTOJobSettingsDTO {
	if o == nil || isNil(o.Settings) {
		var ret DTOJobSettingsDTO
		return ret
	}
	return *o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DTOJobDTO) GetSettingsOk() (*DTOJobSettingsDTO, bool) {
	if o == nil || isNil(o.Settings) {
		return nil, false
	}
	return o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *DTOJobDTO) HasSettings() bool {
	if o != nil && !isNil(o.Settings) {
		return true
	}

	return false
}

// SetSettings gets a reference to the given DTOJobSettingsDTO and assigns it to the Settings field.
func (o *DTOJobDTO) SetSettings(v DTOJobSettingsDTO) {
	o.Settings = &v
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise.
func (o *DTOJobDTO) GetCreatedTime() time.Time {
	if o == nil || isNil(o.CreatedTime) {
		var ret time.Time
		return ret
	}
	return *o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DTOJobDTO) GetCreatedTimeOk() (*time.Time, bool) {
	if o == nil || isNil(o.CreatedTime) {
		return nil, false
	}
	return o.CreatedTime, true
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *DTOJobDTO) HasCreatedTime() bool {
	if o != nil && !isNil(o.CreatedTime) {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given time.Time and assigns it to the CreatedTime field.
func (o *DTOJobDTO) SetCreatedTime(v time.Time) {
	o.CreatedTime = &v
}

// GetCreatorUserName returns the CreatorUserName field value if set, zero value otherwise.
func (o *DTOJobDTO) GetCreatorUserName() string {
	if o == nil || isNil(o.CreatorUserName) {
		var ret string
		return ret
	}
	return *o.CreatorUserName
}

// GetCreatorUserNameOk returns a tuple with the CreatorUserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DTOJobDTO) GetCreatorUserNameOk() (*string, bool) {
	if o == nil || isNil(o.CreatorUserName) {
		return nil, false
	}
	return o.CreatorUserName, true
}

// HasCreatorUserName returns a boolean if a field has been set.
func (o *DTOJobDTO) HasCreatorUserName() bool {
	if o != nil && !isNil(o.CreatorUserName) {
		return true
	}

	return false
}

// SetCreatorUserName gets a reference to the given string and assigns it to the CreatorUserName field.
func (o *DTOJobDTO) SetCreatorUserName(v string) {
	o.CreatorUserName = &v
}

func (o DTOJobDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DTOJobDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.JobId) {
		toSerialize["jobId"] = o.JobId
	}
	if !isNil(o.Settings) {
		toSerialize["settings"] = o.Settings
	}
	if !isNil(o.CreatedTime) {
		toSerialize["createdTime"] = o.CreatedTime
	}
	if !isNil(o.CreatorUserName) {
		toSerialize["creatorUserName"] = o.CreatorUserName
	}
	return toSerialize, nil
}

type NullableDTOJobDTO struct {
	value *DTOJobDTO
	isSet bool
}

func (v NullableDTOJobDTO) Get() *DTOJobDTO {
	return v.value
}

func (v *NullableDTOJobDTO) Set(val *DTOJobDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableDTOJobDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableDTOJobDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDTOJobDTO(val *DTOJobDTO) *NullableDTOJobDTO {
	return &NullableDTOJobDTO{value: val, isSet: true}
}

func (v NullableDTOJobDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDTOJobDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


