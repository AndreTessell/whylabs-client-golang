/*
WhyLabs Songbird

WhyLabs API that enables end-to-end AI observability

API version: 0.1
Contact: support@whylabs.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateSessionUploadResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSessionUploadResponse{}

// CreateSessionUploadResponse Response for creating session uploads
type CreateSessionUploadResponse struct {
	// Token for the created session, to be passed into other session APIs.
	UploadUrl string `json:"uploadUrl"`
}

// NewCreateSessionUploadResponse instantiates a new CreateSessionUploadResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSessionUploadResponse(uploadUrl string) *CreateSessionUploadResponse {
	this := CreateSessionUploadResponse{}
	this.UploadUrl = uploadUrl
	return &this
}

// NewCreateSessionUploadResponseWithDefaults instantiates a new CreateSessionUploadResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSessionUploadResponseWithDefaults() *CreateSessionUploadResponse {
	this := CreateSessionUploadResponse{}
	return &this
}

// GetUploadUrl returns the UploadUrl field value
func (o *CreateSessionUploadResponse) GetUploadUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UploadUrl
}

// GetUploadUrlOk returns a tuple with the UploadUrl field value
// and a boolean to check if the value has been set.
func (o *CreateSessionUploadResponse) GetUploadUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UploadUrl, true
}

// SetUploadUrl sets field value
func (o *CreateSessionUploadResponse) SetUploadUrl(v string) {
	o.UploadUrl = v
}

func (o CreateSessionUploadResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSessionUploadResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["uploadUrl"] = o.UploadUrl
	return toSerialize, nil
}

type NullableCreateSessionUploadResponse struct {
	value *CreateSessionUploadResponse
	isSet bool
}

func (v NullableCreateSessionUploadResponse) Get() *CreateSessionUploadResponse {
	return v.value
}

func (v *NullableCreateSessionUploadResponse) Set(val *CreateSessionUploadResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSessionUploadResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSessionUploadResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSessionUploadResponse(val *CreateSessionUploadResponse) *NullableCreateSessionUploadResponse {
	return &NullableCreateSessionUploadResponse{value: val, isSet: true}
}

func (v NullableCreateSessionUploadResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSessionUploadResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


