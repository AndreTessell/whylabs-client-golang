/*
WhyLabs Songbird

WhyLabs API that enables end-to-end AI observability

API version: 0.1
Contact: support@whylabs.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SegmentMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SegmentMetadata{}

// SegmentMetadata Metadata about a segment
type SegmentMetadata struct {
	OrgId *string `json:"orgId,omitempty"`
	Model *ModelMetadata `json:"model,omitempty"`
	Segment *Segment `json:"segment,omitempty"`
	UpdatedTime *int64 `json:"updatedTime,omitempty"`
}

// NewSegmentMetadata instantiates a new SegmentMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSegmentMetadata() *SegmentMetadata {
	this := SegmentMetadata{}
	return &this
}

// NewSegmentMetadataWithDefaults instantiates a new SegmentMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSegmentMetadataWithDefaults() *SegmentMetadata {
	this := SegmentMetadata{}
	return &this
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *SegmentMetadata) GetOrgId() string {
	if o == nil || isNil(o.OrgId) {
		var ret string
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentMetadata) GetOrgIdOk() (*string, bool) {
	if o == nil || isNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *SegmentMetadata) HasOrgId() bool {
	if o != nil && !isNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given string and assigns it to the OrgId field.
func (o *SegmentMetadata) SetOrgId(v string) {
	o.OrgId = &v
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *SegmentMetadata) GetModel() ModelMetadata {
	if o == nil || isNil(o.Model) {
		var ret ModelMetadata
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentMetadata) GetModelOk() (*ModelMetadata, bool) {
	if o == nil || isNil(o.Model) {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *SegmentMetadata) HasModel() bool {
	if o != nil && !isNil(o.Model) {
		return true
	}

	return false
}

// SetModel gets a reference to the given ModelMetadata and assigns it to the Model field.
func (o *SegmentMetadata) SetModel(v ModelMetadata) {
	o.Model = &v
}

// GetSegment returns the Segment field value if set, zero value otherwise.
func (o *SegmentMetadata) GetSegment() Segment {
	if o == nil || isNil(o.Segment) {
		var ret Segment
		return ret
	}
	return *o.Segment
}

// GetSegmentOk returns a tuple with the Segment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentMetadata) GetSegmentOk() (*Segment, bool) {
	if o == nil || isNil(o.Segment) {
		return nil, false
	}
	return o.Segment, true
}

// HasSegment returns a boolean if a field has been set.
func (o *SegmentMetadata) HasSegment() bool {
	if o != nil && !isNil(o.Segment) {
		return true
	}

	return false
}

// SetSegment gets a reference to the given Segment and assigns it to the Segment field.
func (o *SegmentMetadata) SetSegment(v Segment) {
	o.Segment = &v
}

// GetUpdatedTime returns the UpdatedTime field value if set, zero value otherwise.
func (o *SegmentMetadata) GetUpdatedTime() int64 {
	if o == nil || isNil(o.UpdatedTime) {
		var ret int64
		return ret
	}
	return *o.UpdatedTime
}

// GetUpdatedTimeOk returns a tuple with the UpdatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentMetadata) GetUpdatedTimeOk() (*int64, bool) {
	if o == nil || isNil(o.UpdatedTime) {
		return nil, false
	}
	return o.UpdatedTime, true
}

// HasUpdatedTime returns a boolean if a field has been set.
func (o *SegmentMetadata) HasUpdatedTime() bool {
	if o != nil && !isNil(o.UpdatedTime) {
		return true
	}

	return false
}

// SetUpdatedTime gets a reference to the given int64 and assigns it to the UpdatedTime field.
func (o *SegmentMetadata) SetUpdatedTime(v int64) {
	o.UpdatedTime = &v
}

func (o SegmentMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SegmentMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.OrgId) {
		toSerialize["orgId"] = o.OrgId
	}
	if !isNil(o.Model) {
		toSerialize["model"] = o.Model
	}
	if !isNil(o.Segment) {
		toSerialize["segment"] = o.Segment
	}
	if !isNil(o.UpdatedTime) {
		toSerialize["updatedTime"] = o.UpdatedTime
	}
	return toSerialize, nil
}

type NullableSegmentMetadata struct {
	value *SegmentMetadata
	isSet bool
}

func (v NullableSegmentMetadata) Get() *SegmentMetadata {
	return v.value
}

func (v *NullableSegmentMetadata) Set(val *SegmentMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableSegmentMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableSegmentMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSegmentMetadata(val *SegmentMetadata) *NullableSegmentMetadata {
	return &NullableSegmentMetadata{value: val, isSet: true}
}

func (v NullableSegmentMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSegmentMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


