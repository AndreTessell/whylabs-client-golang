/*
WhyLabs Songbird

WhyLabs API that enables end-to-end AI observability

API version: 0.1
Contact: support@whylabs.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DTOAutoScaleDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DTOAutoScaleDTO{}

// DTOAutoScaleDTO struct for DTOAutoScaleDTO
type DTOAutoScaleDTO struct {
	MinWorkers *int32 `json:"minWorkers,omitempty"`
	MaxWorkers *int32 `json:"maxWorkers,omitempty"`
}

// NewDTOAutoScaleDTO instantiates a new DTOAutoScaleDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDTOAutoScaleDTO() *DTOAutoScaleDTO {
	this := DTOAutoScaleDTO{}
	return &this
}

// NewDTOAutoScaleDTOWithDefaults instantiates a new DTOAutoScaleDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDTOAutoScaleDTOWithDefaults() *DTOAutoScaleDTO {
	this := DTOAutoScaleDTO{}
	return &this
}

// GetMinWorkers returns the MinWorkers field value if set, zero value otherwise.
func (o *DTOAutoScaleDTO) GetMinWorkers() int32 {
	if o == nil || isNil(o.MinWorkers) {
		var ret int32
		return ret
	}
	return *o.MinWorkers
}

// GetMinWorkersOk returns a tuple with the MinWorkers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DTOAutoScaleDTO) GetMinWorkersOk() (*int32, bool) {
	if o == nil || isNil(o.MinWorkers) {
		return nil, false
	}
	return o.MinWorkers, true
}

// HasMinWorkers returns a boolean if a field has been set.
func (o *DTOAutoScaleDTO) HasMinWorkers() bool {
	if o != nil && !isNil(o.MinWorkers) {
		return true
	}

	return false
}

// SetMinWorkers gets a reference to the given int32 and assigns it to the MinWorkers field.
func (o *DTOAutoScaleDTO) SetMinWorkers(v int32) {
	o.MinWorkers = &v
}

// GetMaxWorkers returns the MaxWorkers field value if set, zero value otherwise.
func (o *DTOAutoScaleDTO) GetMaxWorkers() int32 {
	if o == nil || isNil(o.MaxWorkers) {
		var ret int32
		return ret
	}
	return *o.MaxWorkers
}

// GetMaxWorkersOk returns a tuple with the MaxWorkers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DTOAutoScaleDTO) GetMaxWorkersOk() (*int32, bool) {
	if o == nil || isNil(o.MaxWorkers) {
		return nil, false
	}
	return o.MaxWorkers, true
}

// HasMaxWorkers returns a boolean if a field has been set.
func (o *DTOAutoScaleDTO) HasMaxWorkers() bool {
	if o != nil && !isNil(o.MaxWorkers) {
		return true
	}

	return false
}

// SetMaxWorkers gets a reference to the given int32 and assigns it to the MaxWorkers field.
func (o *DTOAutoScaleDTO) SetMaxWorkers(v int32) {
	o.MaxWorkers = &v
}

func (o DTOAutoScaleDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DTOAutoScaleDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.MinWorkers) {
		toSerialize["minWorkers"] = o.MinWorkers
	}
	if !isNil(o.MaxWorkers) {
		toSerialize["maxWorkers"] = o.MaxWorkers
	}
	return toSerialize, nil
}

type NullableDTOAutoScaleDTO struct {
	value *DTOAutoScaleDTO
	isSet bool
}

func (v NullableDTOAutoScaleDTO) Get() *DTOAutoScaleDTO {
	return v.value
}

func (v *NullableDTOAutoScaleDTO) Set(val *DTOAutoScaleDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableDTOAutoScaleDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableDTOAutoScaleDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDTOAutoScaleDTO(val *DTOAutoScaleDTO) *NullableDTOAutoScaleDTO {
	return &NullableDTOAutoScaleDTO{value: val, isSet: true}
}

func (v NullableDTOAutoScaleDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDTOAutoScaleDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


