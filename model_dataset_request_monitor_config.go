/*
WhyLabs Songbird

WhyLabs API that enables end-to-end AI observability

API version: 0.1
Contact: support@whylabs.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DatasetRequestMonitorConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DatasetRequestMonitorConfig{}

// DatasetRequestMonitorConfig A configuration for the whylabs monitor.
type DatasetRequestMonitorConfig struct {
	Config *RequestMonitorConfig `json:"config,omitempty"`
	PerFeatureConfig map[string]RequestFeatureMonitorConfig `json:"perFeatureConfig,omitempty"`
}

// NewDatasetRequestMonitorConfig instantiates a new DatasetRequestMonitorConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDatasetRequestMonitorConfig() *DatasetRequestMonitorConfig {
	this := DatasetRequestMonitorConfig{}
	return &this
}

// NewDatasetRequestMonitorConfigWithDefaults instantiates a new DatasetRequestMonitorConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDatasetRequestMonitorConfigWithDefaults() *DatasetRequestMonitorConfig {
	this := DatasetRequestMonitorConfig{}
	return &this
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *DatasetRequestMonitorConfig) GetConfig() RequestMonitorConfig {
	if o == nil || isNil(o.Config) {
		var ret RequestMonitorConfig
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatasetRequestMonitorConfig) GetConfigOk() (*RequestMonitorConfig, bool) {
	if o == nil || isNil(o.Config) {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *DatasetRequestMonitorConfig) HasConfig() bool {
	if o != nil && !isNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given RequestMonitorConfig and assigns it to the Config field.
func (o *DatasetRequestMonitorConfig) SetConfig(v RequestMonitorConfig) {
	o.Config = &v
}

// GetPerFeatureConfig returns the PerFeatureConfig field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DatasetRequestMonitorConfig) GetPerFeatureConfig() map[string]RequestFeatureMonitorConfig {
	if o == nil {
		var ret map[string]RequestFeatureMonitorConfig
		return ret
	}
	return o.PerFeatureConfig
}

// GetPerFeatureConfigOk returns a tuple with the PerFeatureConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DatasetRequestMonitorConfig) GetPerFeatureConfigOk() (*map[string]RequestFeatureMonitorConfig, bool) {
	if o == nil || isNil(o.PerFeatureConfig) {
		return nil, false
	}
	return &o.PerFeatureConfig, true
}

// HasPerFeatureConfig returns a boolean if a field has been set.
func (o *DatasetRequestMonitorConfig) HasPerFeatureConfig() bool {
	if o != nil && isNil(o.PerFeatureConfig) {
		return true
	}

	return false
}

// SetPerFeatureConfig gets a reference to the given map[string]RequestFeatureMonitorConfig and assigns it to the PerFeatureConfig field.
func (o *DatasetRequestMonitorConfig) SetPerFeatureConfig(v map[string]RequestFeatureMonitorConfig) {
	o.PerFeatureConfig = v
}

func (o DatasetRequestMonitorConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DatasetRequestMonitorConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	if o.PerFeatureConfig != nil {
		toSerialize["perFeatureConfig"] = o.PerFeatureConfig
	}
	return toSerialize, nil
}

type NullableDatasetRequestMonitorConfig struct {
	value *DatasetRequestMonitorConfig
	isSet bool
}

func (v NullableDatasetRequestMonitorConfig) Get() *DatasetRequestMonitorConfig {
	return v.value
}

func (v *NullableDatasetRequestMonitorConfig) Set(val *DatasetRequestMonitorConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableDatasetRequestMonitorConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableDatasetRequestMonitorConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDatasetRequestMonitorConfig(val *DatasetRequestMonitorConfig) *NullableDatasetRequestMonitorConfig {
	return &NullableDatasetRequestMonitorConfig{value: val, isSet: true}
}

func (v NullableDatasetRequestMonitorConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDatasetRequestMonitorConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


