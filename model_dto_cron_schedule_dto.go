/*
WhyLabs Songbird

WhyLabs API that enables end-to-end AI observability

API version: 0.1
Contact: support@whylabs.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DTOCronScheduleDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DTOCronScheduleDTO{}

// DTOCronScheduleDTO struct for DTOCronScheduleDTO
type DTOCronScheduleDTO struct {
	QuartzCronExpression *string `json:"quartzCronExpression,omitempty"`
	TimezoneId *string `json:"timezoneId,omitempty"`
}

// NewDTOCronScheduleDTO instantiates a new DTOCronScheduleDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDTOCronScheduleDTO() *DTOCronScheduleDTO {
	this := DTOCronScheduleDTO{}
	return &this
}

// NewDTOCronScheduleDTOWithDefaults instantiates a new DTOCronScheduleDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDTOCronScheduleDTOWithDefaults() *DTOCronScheduleDTO {
	this := DTOCronScheduleDTO{}
	return &this
}

// GetQuartzCronExpression returns the QuartzCronExpression field value if set, zero value otherwise.
func (o *DTOCronScheduleDTO) GetQuartzCronExpression() string {
	if o == nil || isNil(o.QuartzCronExpression) {
		var ret string
		return ret
	}
	return *o.QuartzCronExpression
}

// GetQuartzCronExpressionOk returns a tuple with the QuartzCronExpression field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DTOCronScheduleDTO) GetQuartzCronExpressionOk() (*string, bool) {
	if o == nil || isNil(o.QuartzCronExpression) {
		return nil, false
	}
	return o.QuartzCronExpression, true
}

// HasQuartzCronExpression returns a boolean if a field has been set.
func (o *DTOCronScheduleDTO) HasQuartzCronExpression() bool {
	if o != nil && !isNil(o.QuartzCronExpression) {
		return true
	}

	return false
}

// SetQuartzCronExpression gets a reference to the given string and assigns it to the QuartzCronExpression field.
func (o *DTOCronScheduleDTO) SetQuartzCronExpression(v string) {
	o.QuartzCronExpression = &v
}

// GetTimezoneId returns the TimezoneId field value if set, zero value otherwise.
func (o *DTOCronScheduleDTO) GetTimezoneId() string {
	if o == nil || isNil(o.TimezoneId) {
		var ret string
		return ret
	}
	return *o.TimezoneId
}

// GetTimezoneIdOk returns a tuple with the TimezoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DTOCronScheduleDTO) GetTimezoneIdOk() (*string, bool) {
	if o == nil || isNil(o.TimezoneId) {
		return nil, false
	}
	return o.TimezoneId, true
}

// HasTimezoneId returns a boolean if a field has been set.
func (o *DTOCronScheduleDTO) HasTimezoneId() bool {
	if o != nil && !isNil(o.TimezoneId) {
		return true
	}

	return false
}

// SetTimezoneId gets a reference to the given string and assigns it to the TimezoneId field.
func (o *DTOCronScheduleDTO) SetTimezoneId(v string) {
	o.TimezoneId = &v
}

func (o DTOCronScheduleDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DTOCronScheduleDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.QuartzCronExpression) {
		toSerialize["quartzCronExpression"] = o.QuartzCronExpression
	}
	if !isNil(o.TimezoneId) {
		toSerialize["timezoneId"] = o.TimezoneId
	}
	return toSerialize, nil
}

type NullableDTOCronScheduleDTO struct {
	value *DTOCronScheduleDTO
	isSet bool
}

func (v NullableDTOCronScheduleDTO) Get() *DTOCronScheduleDTO {
	return v.value
}

func (v *NullableDTOCronScheduleDTO) Set(val *DTOCronScheduleDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableDTOCronScheduleDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableDTOCronScheduleDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDTOCronScheduleDTO(val *DTOCronScheduleDTO) *NullableDTOCronScheduleDTO {
	return &NullableDTOCronScheduleDTO{value: val, isSet: true}
}

func (v NullableDTOCronScheduleDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDTOCronScheduleDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


