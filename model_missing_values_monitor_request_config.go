/*
WhyLabs Songbird

WhyLabs API that enables end-to-end AI observability

API version: 0.1
Contact: support@whylabs.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MissingValuesMonitorRequestConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MissingValuesMonitorRequestConfig{}

// MissingValuesMonitorRequestConfig struct for MissingValuesMonitorRequestConfig
type MissingValuesMonitorRequestConfig struct {
	Enable *bool `json:"enable,omitempty"`
	Threshold NullableFloat64 `json:"threshold,omitempty"`
	ThresholdLowerBound NullableFloat64 `json:"thresholdLowerBound,omitempty"`
	ThresholdUpperBound NullableFloat64 `json:"thresholdUpperBound,omitempty"`
}

// NewMissingValuesMonitorRequestConfig instantiates a new MissingValuesMonitorRequestConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMissingValuesMonitorRequestConfig() *MissingValuesMonitorRequestConfig {
	this := MissingValuesMonitorRequestConfig{}
	return &this
}

// NewMissingValuesMonitorRequestConfigWithDefaults instantiates a new MissingValuesMonitorRequestConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMissingValuesMonitorRequestConfigWithDefaults() *MissingValuesMonitorRequestConfig {
	this := MissingValuesMonitorRequestConfig{}
	return &this
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *MissingValuesMonitorRequestConfig) GetEnable() bool {
	if o == nil || isNil(o.Enable) {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MissingValuesMonitorRequestConfig) GetEnableOk() (*bool, bool) {
	if o == nil || isNil(o.Enable) {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *MissingValuesMonitorRequestConfig) HasEnable() bool {
	if o != nil && !isNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *MissingValuesMonitorRequestConfig) SetEnable(v bool) {
	o.Enable = &v
}

// GetThreshold returns the Threshold field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MissingValuesMonitorRequestConfig) GetThreshold() float64 {
	if o == nil || isNil(o.Threshold.Get()) {
		var ret float64
		return ret
	}
	return *o.Threshold.Get()
}

// GetThresholdOk returns a tuple with the Threshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MissingValuesMonitorRequestConfig) GetThresholdOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Threshold.Get(), o.Threshold.IsSet()
}

// HasThreshold returns a boolean if a field has been set.
func (o *MissingValuesMonitorRequestConfig) HasThreshold() bool {
	if o != nil && o.Threshold.IsSet() {
		return true
	}

	return false
}

// SetThreshold gets a reference to the given NullableFloat64 and assigns it to the Threshold field.
func (o *MissingValuesMonitorRequestConfig) SetThreshold(v float64) {
	o.Threshold.Set(&v)
}
// SetThresholdNil sets the value for Threshold to be an explicit nil
func (o *MissingValuesMonitorRequestConfig) SetThresholdNil() {
	o.Threshold.Set(nil)
}

// UnsetThreshold ensures that no value is present for Threshold, not even an explicit nil
func (o *MissingValuesMonitorRequestConfig) UnsetThreshold() {
	o.Threshold.Unset()
}

// GetThresholdLowerBound returns the ThresholdLowerBound field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MissingValuesMonitorRequestConfig) GetThresholdLowerBound() float64 {
	if o == nil || isNil(o.ThresholdLowerBound.Get()) {
		var ret float64
		return ret
	}
	return *o.ThresholdLowerBound.Get()
}

// GetThresholdLowerBoundOk returns a tuple with the ThresholdLowerBound field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MissingValuesMonitorRequestConfig) GetThresholdLowerBoundOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ThresholdLowerBound.Get(), o.ThresholdLowerBound.IsSet()
}

// HasThresholdLowerBound returns a boolean if a field has been set.
func (o *MissingValuesMonitorRequestConfig) HasThresholdLowerBound() bool {
	if o != nil && o.ThresholdLowerBound.IsSet() {
		return true
	}

	return false
}

// SetThresholdLowerBound gets a reference to the given NullableFloat64 and assigns it to the ThresholdLowerBound field.
func (o *MissingValuesMonitorRequestConfig) SetThresholdLowerBound(v float64) {
	o.ThresholdLowerBound.Set(&v)
}
// SetThresholdLowerBoundNil sets the value for ThresholdLowerBound to be an explicit nil
func (o *MissingValuesMonitorRequestConfig) SetThresholdLowerBoundNil() {
	o.ThresholdLowerBound.Set(nil)
}

// UnsetThresholdLowerBound ensures that no value is present for ThresholdLowerBound, not even an explicit nil
func (o *MissingValuesMonitorRequestConfig) UnsetThresholdLowerBound() {
	o.ThresholdLowerBound.Unset()
}

// GetThresholdUpperBound returns the ThresholdUpperBound field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MissingValuesMonitorRequestConfig) GetThresholdUpperBound() float64 {
	if o == nil || isNil(o.ThresholdUpperBound.Get()) {
		var ret float64
		return ret
	}
	return *o.ThresholdUpperBound.Get()
}

// GetThresholdUpperBoundOk returns a tuple with the ThresholdUpperBound field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MissingValuesMonitorRequestConfig) GetThresholdUpperBoundOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ThresholdUpperBound.Get(), o.ThresholdUpperBound.IsSet()
}

// HasThresholdUpperBound returns a boolean if a field has been set.
func (o *MissingValuesMonitorRequestConfig) HasThresholdUpperBound() bool {
	if o != nil && o.ThresholdUpperBound.IsSet() {
		return true
	}

	return false
}

// SetThresholdUpperBound gets a reference to the given NullableFloat64 and assigns it to the ThresholdUpperBound field.
func (o *MissingValuesMonitorRequestConfig) SetThresholdUpperBound(v float64) {
	o.ThresholdUpperBound.Set(&v)
}
// SetThresholdUpperBoundNil sets the value for ThresholdUpperBound to be an explicit nil
func (o *MissingValuesMonitorRequestConfig) SetThresholdUpperBoundNil() {
	o.ThresholdUpperBound.Set(nil)
}

// UnsetThresholdUpperBound ensures that no value is present for ThresholdUpperBound, not even an explicit nil
func (o *MissingValuesMonitorRequestConfig) UnsetThresholdUpperBound() {
	o.ThresholdUpperBound.Unset()
}

func (o MissingValuesMonitorRequestConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MissingValuesMonitorRequestConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Enable) {
		toSerialize["enable"] = o.Enable
	}
	if o.Threshold.IsSet() {
		toSerialize["threshold"] = o.Threshold.Get()
	}
	if o.ThresholdLowerBound.IsSet() {
		toSerialize["thresholdLowerBound"] = o.ThresholdLowerBound.Get()
	}
	if o.ThresholdUpperBound.IsSet() {
		toSerialize["thresholdUpperBound"] = o.ThresholdUpperBound.Get()
	}
	return toSerialize, nil
}

type NullableMissingValuesMonitorRequestConfig struct {
	value *MissingValuesMonitorRequestConfig
	isSet bool
}

func (v NullableMissingValuesMonitorRequestConfig) Get() *MissingValuesMonitorRequestConfig {
	return v.value
}

func (v *NullableMissingValuesMonitorRequestConfig) Set(val *MissingValuesMonitorRequestConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableMissingValuesMonitorRequestConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableMissingValuesMonitorRequestConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMissingValuesMonitorRequestConfig(val *MissingValuesMonitorRequestConfig) *NullableMissingValuesMonitorRequestConfig {
	return &NullableMissingValuesMonitorRequestConfig{value: val, isSet: true}
}

func (v NullableMissingValuesMonitorRequestConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMissingValuesMonitorRequestConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


